/* soapStub.h
   Generated by gSOAP 2.8.8 from TurbulenceService.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_turb1	"http://turbulence.pha.jhu.edu/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20808
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_turb1__SpatialInterpolation
#define SOAP_TYPE_turb1__SpatialInterpolation (11)
/* turb1:SpatialInterpolation */
enum turb1__SpatialInterpolation {turb1__SpatialInterpolation__None = 0, turb1__SpatialInterpolation__None_USCOREFd4 = 1, turb1__SpatialInterpolation__None_USCOREFd6 = 2, turb1__SpatialInterpolation__None_USCOREFd8 = 3, turb1__SpatialInterpolation__Fd4Lag4 = 4, turb1__SpatialInterpolation__Lag4 = 5, turb1__SpatialInterpolation__Lag6 = 6, turb1__SpatialInterpolation__Lag8 = 7, turb1__SpatialInterpolation__M1Q4 = 8, turb1__SpatialInterpolation__M2Q4 = 9, turb1__SpatialInterpolation__M3Q4 = 10, turb1__SpatialInterpolation__M4Q4 = 11, turb1__SpatialInterpolation__M1Q6 = 12, turb1__SpatialInterpolation__M2Q6 = 13, turb1__SpatialInterpolation__M3Q6 = 14, turb1__SpatialInterpolation__M4Q6 = 15, turb1__SpatialInterpolation__M1Q8 = 16, turb1__SpatialInterpolation__M2Q8 = 17, turb1__SpatialInterpolation__M3Q8 = 18, turb1__SpatialInterpolation__M4Q8 = 19, turb1__SpatialInterpolation__M1Q10 = 20, turb1__SpatialInterpolation__M2Q10 = 21, turb1__SpatialInterpolation__M3Q10 = 22, turb1__SpatialInterpolation__M4Q10 = 23, turb1__SpatialInterpolation__M1Q12 = 24, turb1__SpatialInterpolation__M2Q12 = 25, turb1__SpatialInterpolation__M3Q12 = 26, turb1__SpatialInterpolation__M4Q12 = 27, turb1__SpatialInterpolation__M1Q14 = 28, turb1__SpatialInterpolation__M2Q14 = 29, turb1__SpatialInterpolation__M3Q14 = 30, turb1__SpatialInterpolation__M4Q14 = 31};
#endif

#ifndef SOAP_TYPE_turb1__TemporalInterpolation
#define SOAP_TYPE_turb1__TemporalInterpolation (12)
/* turb1:TemporalInterpolation */
enum turb1__TemporalInterpolation {turb1__TemporalInterpolation__None = 0, turb1__TemporalInterpolation__PCHIP = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfPoint3
#define SOAP_TYPE_turb1__ArrayOfPoint3 (13)
/* turb1:ArrayOfPoint3 */
struct turb1__ArrayOfPoint3
{
	int __sizePoint3;	/* sequence of elements <Point3> */
	struct turb1__Point3 *Point3;	/* optional element of type turb1:Point3 */
};
#endif

#ifndef SOAP_TYPE_turb1__Point3
#define SOAP_TYPE_turb1__Point3 (14)
/* turb1:Point3 */
struct turb1__Point3
{
	float x;	/* required element of type xsd:float */
	float y;	/* required element of type xsd:float */
	float z;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVector3
#define SOAP_TYPE_turb1__ArrayOfVector3 (17)
/* turb1:ArrayOfVector3 */
struct turb1__ArrayOfVector3
{
	int __sizeVector3;	/* sequence of elements <Vector3> */
	struct turb1__Vector3 *Vector3;	/* optional element of type turb1:Vector3 */
};
#endif

#ifndef SOAP_TYPE_turb1__Vector3
#define SOAP_TYPE_turb1__Vector3 (18)
/* turb1:Vector3 */
struct turb1__Vector3
{
	float x;	/* required element of type xsd:float */
	float y;	/* required element of type xsd:float */
	float z;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfPressure
#define SOAP_TYPE_turb1__ArrayOfPressure (20)
/* turb1:ArrayOfPressure */
struct turb1__ArrayOfPressure
{
	int __sizePressure;	/* sequence of elements <Pressure> */
	struct turb1__Pressure *Pressure;	/* optional element of type turb1:Pressure */
};
#endif

#ifndef SOAP_TYPE_turb1__Pressure
#define SOAP_TYPE_turb1__Pressure (21)
/* turb1:Pressure */
struct turb1__Pressure
{
	float p;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfPressureHessian
#define SOAP_TYPE_turb1__ArrayOfPressureHessian (23)
/* turb1:ArrayOfPressureHessian */
struct turb1__ArrayOfPressureHessian
{
	int __sizePressureHessian;	/* sequence of elements <PressureHessian> */
	struct turb1__PressureHessian *PressureHessian;	/* optional element of type turb1:PressureHessian */
};
#endif

#ifndef SOAP_TYPE_turb1__PressureHessian
#define SOAP_TYPE_turb1__PressureHessian (24)
/* turb1:PressureHessian */
struct turb1__PressureHessian
{
	float d2pdxdx;	/* required element of type xsd:float */
	float d2pdxdy;	/* required element of type xsd:float */
	float d2pdxdz;	/* required element of type xsd:float */
	float d2pdydy;	/* required element of type xsd:float */
	float d2pdydz;	/* required element of type xsd:float */
	float d2pdzdz;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVector3P
#define SOAP_TYPE_turb1__ArrayOfVector3P (26)
/* turb1:ArrayOfVector3P */
struct turb1__ArrayOfVector3P
{
	int __sizeVector3P;	/* sequence of elements <Vector3P> */
	struct turb1__Vector3P *Vector3P;	/* optional element of type turb1:Vector3P */
};
#endif

#ifndef SOAP_TYPE_turb1__Vector3P
#define SOAP_TYPE_turb1__Vector3P (27)
/* turb1:Vector3P */
struct turb1__Vector3P
{
	float x;	/* required element of type xsd:float */
	float y;	/* required element of type xsd:float */
	float z;	/* required element of type xsd:float */
	float p;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVelocityGradient
#define SOAP_TYPE_turb1__ArrayOfVelocityGradient (29)
/* turb1:ArrayOfVelocityGradient */
struct turb1__ArrayOfVelocityGradient
{
	int __sizeVelocityGradient;	/* sequence of elements <VelocityGradient> */
	struct turb1__VelocityGradient *VelocityGradient;	/* optional element of type turb1:VelocityGradient */
};
#endif

#ifndef SOAP_TYPE_turb1__VelocityGradient
#define SOAP_TYPE_turb1__VelocityGradient (30)
/* turb1:VelocityGradient */
struct turb1__VelocityGradient
{
	float duxdx;	/* required element of type xsd:float */
	float duxdy;	/* required element of type xsd:float */
	float duxdz;	/* required element of type xsd:float */
	float duydx;	/* required element of type xsd:float */
	float duydy;	/* required element of type xsd:float */
	float duydz;	/* required element of type xsd:float */
	float duzdx;	/* required element of type xsd:float */
	float duzdy;	/* required element of type xsd:float */
	float duzdz;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfVelocityHessian
#define SOAP_TYPE_turb1__ArrayOfVelocityHessian (32)
/* turb1:ArrayOfVelocityHessian */
struct turb1__ArrayOfVelocityHessian
{
	int __sizeVelocityHessian;	/* sequence of elements <VelocityHessian> */
	struct turb1__VelocityHessian *VelocityHessian;	/* optional element of type turb1:VelocityHessian */
};
#endif

#ifndef SOAP_TYPE_turb1__VelocityHessian
#define SOAP_TYPE_turb1__VelocityHessian (33)
/* turb1:VelocityHessian */
struct turb1__VelocityHessian
{
	float d2uxdxdx;	/* required element of type xsd:float */
	float d2uxdxdy;	/* required element of type xsd:float */
	float d2uxdxdz;	/* required element of type xsd:float */
	float d2uxdydy;	/* required element of type xsd:float */
	float d2uxdydz;	/* required element of type xsd:float */
	float d2uxdzdz;	/* required element of type xsd:float */
	float d2uydxdx;	/* required element of type xsd:float */
	float d2uydxdy;	/* required element of type xsd:float */
	float d2uydxdz;	/* required element of type xsd:float */
	float d2uydydy;	/* required element of type xsd:float */
	float d2uydydz;	/* required element of type xsd:float */
	float d2uydzdz;	/* required element of type xsd:float */
	float d2uzdxdx;	/* required element of type xsd:float */
	float d2uzdxdy;	/* required element of type xsd:float */
	float d2uzdxdz;	/* required element of type xsd:float */
	float d2uzdydy;	/* required element of type xsd:float */
	float d2uzdydz;	/* required element of type xsd:float */
	float d2uzdzdz;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfSGSTensor
#define SOAP_TYPE_turb1__ArrayOfSGSTensor (35)
/* turb1:ArrayOfSGSTensor */
struct turb1__ArrayOfSGSTensor
{
	int __sizeSGSTensor;	/* sequence of elements <SGSTensor> */
	struct turb1__SGSTensor *SGSTensor;	/* optional element of type turb1:SGSTensor */
};
#endif

#ifndef SOAP_TYPE_turb1__SGSTensor
#define SOAP_TYPE_turb1__SGSTensor (36)
/* turb1:SGSTensor */
struct turb1__SGSTensor
{
	float xx;	/* required element of type xsd:float */
	float yy;	/* required element of type xsd:float */
	float zz;	/* required element of type xsd:float */
	float xy;	/* required element of type xsd:float */
	float xz;	/* required element of type xsd:float */
	float yz;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_turb1__ArrayOfThresholdInfo
#define SOAP_TYPE_turb1__ArrayOfThresholdInfo (38)
/* turb1:ArrayOfThresholdInfo */
struct turb1__ArrayOfThresholdInfo
{
	int __sizeThresholdInfo;	/* sequence of elements <ThresholdInfo> */
	struct turb1__ThresholdInfo *ThresholdInfo;	/* optional element of type turb1:ThresholdInfo */
};
#endif

#ifndef SOAP_TYPE_turb1__ThresholdInfo
#define SOAP_TYPE_turb1__ThresholdInfo (39)
/* turb1:ThresholdInfo */
struct turb1__ThresholdInfo
{
	int x;	/* required element of type xsd:int */
	int y;	/* required element of type xsd:int */
	int z;	/* required element of type xsd:int */
	float value;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE__turb1__NullOp
#define SOAP_TYPE__turb1__NullOp (41)
/* turb1:NullOp */
struct _turb1__NullOp
{
	char *authToken;	/* optional element of type xsd:string */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__NullOpResponse
#define SOAP_TYPE__turb1__NullOpResponse (43)
/* turb1:NullOpResponse */
struct _turb1__NullOpResponse
{
	struct turb1__ArrayOfVector3 *NullOpResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocity
#define SOAP_TYPE__turb1__GetVelocity (45)
/* turb1:GetVelocity */
struct _turb1__GetVelocity
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityResponse
#define SOAP_TYPE__turb1__GetVelocityResponse (46)
/* turb1:GetVelocityResponse */
struct _turb1__GetVelocityResponse
{
	struct turb1__ArrayOfVector3 *GetVelocityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityBatch
#define SOAP_TYPE__turb1__GetVelocityBatch (47)
/* turb1:GetVelocityBatch */
struct _turb1__GetVelocityBatch
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityBatchResponse
#define SOAP_TYPE__turb1__GetVelocityBatchResponse (48)
/* turb1:GetVelocityBatchResponse */
struct _turb1__GetVelocityBatchResponse
{
	struct turb1__ArrayOfVector3 *GetVelocityBatchResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawVelocity
#define SOAP_TYPE__turb1__GetRawVelocity (49)
/* turb1:GetRawVelocity */
struct _turb1__GetRawVelocity
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	int X;	/* required element of type xsd:int */
	int Y;	/* required element of type xsd:int */
	int Z;	/* required element of type xsd:int */
	int Xwidth;	/* required element of type xsd:int */
	int Ywidth;	/* required element of type xsd:int */
	int Zwidth;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawVelocityResponse
#define SOAP_TYPE__turb1__GetRawVelocityResponse (50)
/* turb1:GetRawVelocityResponse */
struct _turb1__GetRawVelocityResponse
{
	struct xsd__base64Binary *GetRawVelocityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPressure
#define SOAP_TYPE__turb1__GetPressure (52)
/* turb1:GetPressure */
struct _turb1__GetPressure
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPressureResponse
#define SOAP_TYPE__turb1__GetPressureResponse (53)
/* turb1:GetPressureResponse */
struct _turb1__GetPressureResponse
{
	struct turb1__ArrayOfPressure *GetPressureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfPressure */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawPressure
#define SOAP_TYPE__turb1__GetRawPressure (55)
/* turb1:GetRawPressure */
struct _turb1__GetRawPressure
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	int X;	/* required element of type xsd:int */
	int Y;	/* required element of type xsd:int */
	int Z;	/* required element of type xsd:int */
	int Xwidth;	/* required element of type xsd:int */
	int Ywidth;	/* required element of type xsd:int */
	int Zwidth;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawPressureResponse
#define SOAP_TYPE__turb1__GetRawPressureResponse (56)
/* turb1:GetRawPressureResponse */
struct _turb1__GetRawPressureResponse
{
	struct xsd__base64Binary *GetRawPressureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticField
#define SOAP_TYPE__turb1__GetMagneticField (57)
/* turb1:GetMagneticField */
struct _turb1__GetMagneticField
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldResponse
#define SOAP_TYPE__turb1__GetMagneticFieldResponse (58)
/* turb1:GetMagneticFieldResponse */
struct _turb1__GetMagneticFieldResponse
{
	struct turb1__ArrayOfVector3 *GetMagneticFieldResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawMagneticField
#define SOAP_TYPE__turb1__GetRawMagneticField (59)
/* turb1:GetRawMagneticField */
struct _turb1__GetRawMagneticField
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	int X;	/* required element of type xsd:int */
	int Y;	/* required element of type xsd:int */
	int Z;	/* required element of type xsd:int */
	int Xwidth;	/* required element of type xsd:int */
	int Ywidth;	/* required element of type xsd:int */
	int Zwidth;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawMagneticFieldResponse
#define SOAP_TYPE__turb1__GetRawMagneticFieldResponse (60)
/* turb1:GetRawMagneticFieldResponse */
struct _turb1__GetRawMagneticFieldResponse
{
	struct xsd__base64Binary *GetRawMagneticFieldResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotential
#define SOAP_TYPE__turb1__GetVectorPotential (61)
/* turb1:GetVectorPotential */
struct _turb1__GetVectorPotential
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialResponse
#define SOAP_TYPE__turb1__GetVectorPotentialResponse (62)
/* turb1:GetVectorPotentialResponse */
struct _turb1__GetVectorPotentialResponse
{
	struct turb1__ArrayOfVector3 *GetVectorPotentialResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawVectorPotential
#define SOAP_TYPE__turb1__GetRawVectorPotential (63)
/* turb1:GetRawVectorPotential */
struct _turb1__GetRawVectorPotential
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	int X;	/* required element of type xsd:int */
	int Y;	/* required element of type xsd:int */
	int Z;	/* required element of type xsd:int */
	int Xwidth;	/* required element of type xsd:int */
	int Ywidth;	/* required element of type xsd:int */
	int Zwidth;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawVectorPotentialResponse
#define SOAP_TYPE__turb1__GetRawVectorPotentialResponse (64)
/* turb1:GetRawVectorPotentialResponse */
struct _turb1__GetRawVectorPotentialResponse
{
	struct xsd__base64Binary *GetRawVectorPotentialResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE__turb1__GetDensity
#define SOAP_TYPE__turb1__GetDensity (65)
/* turb1:GetDensity */
struct _turb1__GetDensity
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetDensityResponse
#define SOAP_TYPE__turb1__GetDensityResponse (66)
/* turb1:GetDensityResponse */
struct _turb1__GetDensityResponse
{
	struct turb1__ArrayOfPressure *GetDensityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfPressure */
};
#endif

#ifndef SOAP_TYPE__turb1__GetDensityGradient
#define SOAP_TYPE__turb1__GetDensityGradient (67)
/* turb1:GetDensityGradient */
struct _turb1__GetDensityGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetDensityGradientResponse
#define SOAP_TYPE__turb1__GetDensityGradientResponse (68)
/* turb1:GetDensityGradientResponse */
struct _turb1__GetDensityGradientResponse
{
	struct turb1__ArrayOfVector3 *GetDensityGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetDensityHessian
#define SOAP_TYPE__turb1__GetDensityHessian (69)
/* turb1:GetDensityHessian */
struct _turb1__GetDensityHessian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetDensityHessianResponse
#define SOAP_TYPE__turb1__GetDensityHessianResponse (70)
/* turb1:GetDensityHessianResponse */
struct _turb1__GetDensityHessianResponse
{
	struct turb1__ArrayOfPressureHessian *GetDensityHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfPressureHessian */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawDensity
#define SOAP_TYPE__turb1__GetRawDensity (72)
/* turb1:GetRawDensity */
struct _turb1__GetRawDensity
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	int X;	/* required element of type xsd:int */
	int Y;	/* required element of type xsd:int */
	int Z;	/* required element of type xsd:int */
	int Xwidth;	/* required element of type xsd:int */
	int Ywidth;	/* required element of type xsd:int */
	int Zwidth;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__turb1__GetRawDensityResponse
#define SOAP_TYPE__turb1__GetRawDensityResponse (73)
/* turb1:GetRawDensityResponse */
struct _turb1__GetRawDensityResponse
{
	struct xsd__base64Binary *GetRawDensityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE__turb1__GetForce
#define SOAP_TYPE__turb1__GetForce (74)
/* turb1:GetForce */
struct _turb1__GetForce
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetForceResponse
#define SOAP_TYPE__turb1__GetForceResponse (75)
/* turb1:GetForceResponse */
struct _turb1__GetForceResponse
{
	struct turb1__ArrayOfVector3 *GetForceResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityAndPressure
#define SOAP_TYPE__turb1__GetVelocityAndPressure (76)
/* turb1:GetVelocityAndPressure */
struct _turb1__GetVelocityAndPressure
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityAndPressureResponse
#define SOAP_TYPE__turb1__GetVelocityAndPressureResponse (77)
/* turb1:GetVelocityAndPressureResponse */
struct _turb1__GetVelocityAndPressureResponse
{
	struct turb1__ArrayOfVector3P *GetVelocityAndPressureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3P */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityGradient
#define SOAP_TYPE__turb1__GetVelocityGradient (79)
/* turb1:GetVelocityGradient */
struct _turb1__GetVelocityGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityGradientResponse
#define SOAP_TYPE__turb1__GetVelocityGradientResponse (80)
/* turb1:GetVelocityGradientResponse */
struct _turb1__GetVelocityGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetVelocityGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityGradient */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldGradient
#define SOAP_TYPE__turb1__GetMagneticFieldGradient (82)
/* turb1:GetMagneticFieldGradient */
struct _turb1__GetMagneticFieldGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldGradientResponse
#define SOAP_TYPE__turb1__GetMagneticFieldGradientResponse (83)
/* turb1:GetMagneticFieldGradientResponse */
struct _turb1__GetMagneticFieldGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetMagneticFieldGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityGradient */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialGradient
#define SOAP_TYPE__turb1__GetVectorPotentialGradient (84)
/* turb1:GetVectorPotentialGradient */
struct _turb1__GetVectorPotentialGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialGradientResponse
#define SOAP_TYPE__turb1__GetVectorPotentialGradientResponse (85)
/* turb1:GetVectorPotentialGradientResponse */
struct _turb1__GetVectorPotentialGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetVectorPotentialGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityGradient */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPressureGradient
#define SOAP_TYPE__turb1__GetPressureGradient (86)
/* turb1:GetPressureGradient */
struct _turb1__GetPressureGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPressureGradientResponse
#define SOAP_TYPE__turb1__GetPressureGradientResponse (87)
/* turb1:GetPressureGradientResponse */
struct _turb1__GetPressureGradientResponse
{
	struct turb1__ArrayOfVector3 *GetPressureGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPressureHessian
#define SOAP_TYPE__turb1__GetPressureHessian (88)
/* turb1:GetPressureHessian */
struct _turb1__GetPressureHessian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPressureHessianResponse
#define SOAP_TYPE__turb1__GetPressureHessianResponse (89)
/* turb1:GetPressureHessianResponse */
struct _turb1__GetPressureHessianResponse
{
	struct turb1__ArrayOfPressureHessian *GetPressureHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfPressureHessian */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityHessian
#define SOAP_TYPE__turb1__GetVelocityHessian (90)
/* turb1:GetVelocityHessian */
struct _turb1__GetVelocityHessian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityHessianResponse
#define SOAP_TYPE__turb1__GetVelocityHessianResponse (91)
/* turb1:GetVelocityHessianResponse */
struct _turb1__GetVelocityHessianResponse
{
	struct turb1__ArrayOfVelocityHessian *GetVelocityHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityHessian */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticHessian
#define SOAP_TYPE__turb1__GetMagneticHessian (93)
/* turb1:GetMagneticHessian */
struct _turb1__GetMagneticHessian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticHessianResponse
#define SOAP_TYPE__turb1__GetMagneticHessianResponse (94)
/* turb1:GetMagneticHessianResponse */
struct _turb1__GetMagneticHessianResponse
{
	struct turb1__ArrayOfVelocityHessian *GetMagneticHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityHessian */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialHessian
#define SOAP_TYPE__turb1__GetVectorPotentialHessian (95)
/* turb1:GetVectorPotentialHessian */
struct _turb1__GetVectorPotentialHessian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialHessianResponse
#define SOAP_TYPE__turb1__GetVectorPotentialHessianResponse (96)
/* turb1:GetVectorPotentialHessianResponse */
struct _turb1__GetVectorPotentialHessianResponse
{
	struct turb1__ArrayOfVelocityHessian *GetVectorPotentialHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityHessian */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityLaplacian
#define SOAP_TYPE__turb1__GetVelocityLaplacian (97)
/* turb1:GetVelocityLaplacian */
struct _turb1__GetVelocityLaplacian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVelocityLaplacianResponse
#define SOAP_TYPE__turb1__GetVelocityLaplacianResponse (98)
/* turb1:GetVelocityLaplacianResponse */
struct _turb1__GetVelocityLaplacianResponse
{
	struct turb1__ArrayOfVector3 *GetVelocityLaplacianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldLaplacian
#define SOAP_TYPE__turb1__GetMagneticFieldLaplacian (99)
/* turb1:GetMagneticFieldLaplacian */
struct _turb1__GetMagneticFieldLaplacian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetMagneticFieldLaplacianResponse
#define SOAP_TYPE__turb1__GetMagneticFieldLaplacianResponse (100)
/* turb1:GetMagneticFieldLaplacianResponse */
struct _turb1__GetMagneticFieldLaplacianResponse
{
	struct turb1__ArrayOfVector3 *GetMagneticFieldLaplacianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialLaplacian
#define SOAP_TYPE__turb1__GetVectorPotentialLaplacian (101)
/* turb1:GetVectorPotentialLaplacian */
struct _turb1__GetVectorPotentialLaplacian
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetVectorPotentialLaplacianResponse
#define SOAP_TYPE__turb1__GetVectorPotentialLaplacianResponse (102)
/* turb1:GetVectorPotentialLaplacianResponse */
struct _turb1__GetVectorPotentialLaplacianResponse
{
	struct turb1__ArrayOfVector3 *GetVectorPotentialLaplacianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPosition
#define SOAP_TYPE__turb1__GetPosition (103)
/* turb1:GetPosition */
struct _turb1__GetPosition
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	float StartTime;	/* required element of type xsd:float */
	float EndTime;	/* required element of type xsd:float */
	float dt;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetPositionResponse
#define SOAP_TYPE__turb1__GetPositionResponse (104)
/* turb1:GetPositionResponse */
struct _turb1__GetPositionResponse
{
	struct turb1__ArrayOfPoint3 *GetPositionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilter
#define SOAP_TYPE__turb1__GetBoxFilter (105)
/* turb1:GetBoxFilter */
struct _turb1__GetBoxFilter
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	char *field;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	float filterwidth;	/* required element of type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterResponse
#define SOAP_TYPE__turb1__GetBoxFilterResponse (106)
/* turb1:GetBoxFilterResponse */
struct _turb1__GetBoxFilterResponse
{
	struct turb1__ArrayOfVector3 *GetBoxFilterResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVector3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGS
#define SOAP_TYPE__turb1__GetBoxFilterSGS (107)
/* turb1:GetBoxFilterSGS */
struct _turb1__GetBoxFilterSGS
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	char *field;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	float filterwidth;	/* required element of type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSResponse
#define SOAP_TYPE__turb1__GetBoxFilterSGSResponse (108)
/* turb1:GetBoxFilterSGSResponse */
struct _turb1__GetBoxFilterSGSResponse
{
	struct turb1__ArrayOfSGSTensor *GetBoxFilterSGSResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfSGSTensor */
};
#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterGradient
#define SOAP_TYPE__turb1__GetBoxFilterGradient (110)
/* turb1:GetBoxFilterGradient */
struct _turb1__GetBoxFilterGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	char *field;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	float filterwidth;	/* required element of type xsd:float */
	float spacing;	/* required element of type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetBoxFilterGradientResponse
#define SOAP_TYPE__turb1__GetBoxFilterGradientResponse (111)
/* turb1:GetBoxFilterGradientResponse */
struct _turb1__GetBoxFilterGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetBoxFilterGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityGradient */
};
#endif

#ifndef SOAP_TYPE__turb1__GetThreshold
#define SOAP_TYPE__turb1__GetThreshold (112)
/* turb1:GetThreshold */
struct _turb1__GetThreshold
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	char *field;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	float threshold;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	int X;	/* required element of type xsd:int */
	int Y;	/* required element of type xsd:int */
	int Z;	/* required element of type xsd:int */
	int Xwidth;	/* required element of type xsd:int */
	int Ywidth;	/* required element of type xsd:int */
	int Zwidth;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__turb1__GetThresholdResponse
#define SOAP_TYPE__turb1__GetThresholdResponse (113)
/* turb1:GetThresholdResponse */
struct _turb1__GetThresholdResponse
{
	struct turb1__ArrayOfThresholdInfo *GetThresholdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfThresholdInfo */
};
#endif

#ifndef SOAP_TYPE__turb1__GetLaplacianOfGradient
#define SOAP_TYPE__turb1__GetLaplacianOfGradient (115)
/* turb1:GetLaplacianOfGradient */
struct _turb1__GetLaplacianOfGradient
{
	char *authToken;	/* optional element of type xsd:string */
	char *dataset;	/* optional element of type xsd:string */
	char *field;	/* optional element of type xsd:string */
	float time;	/* required element of type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of type turb1:ArrayOfPoint3 */
};
#endif

#ifndef SOAP_TYPE__turb1__GetLaplacianOfGradientResponse
#define SOAP_TYPE__turb1__GetLaplacianOfGradientResponse (116)
/* turb1:GetLaplacianOfGradientResponse */
struct _turb1__GetLaplacianOfGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetLaplacianOfGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type turb1:ArrayOfVelocityGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__NullOp
#define SOAP_TYPE___turb2__NullOp (120)
/* Operation wrapper: */
struct __turb2__NullOp
{
	struct _turb1__NullOp *turb1__NullOp;	/* optional element of type turb1:NullOp */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVelocity
#define SOAP_TYPE___turb2__GetVelocity (124)
/* Operation wrapper: */
struct __turb2__GetVelocity
{
	struct _turb1__GetVelocity *turb1__GetVelocity;	/* optional element of type turb1:GetVelocity */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVelocityBatch
#define SOAP_TYPE___turb2__GetVelocityBatch (128)
/* Operation wrapper: */
struct __turb2__GetVelocityBatch
{
	struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch;	/* optional element of type turb1:GetVelocityBatch */
};
#endif

#ifndef SOAP_TYPE___turb2__GetRawVelocity
#define SOAP_TYPE___turb2__GetRawVelocity (132)
/* Operation wrapper: */
struct __turb2__GetRawVelocity
{
	struct _turb1__GetRawVelocity *turb1__GetRawVelocity;	/* optional element of type turb1:GetRawVelocity */
};
#endif

#ifndef SOAP_TYPE___turb2__GetPressure
#define SOAP_TYPE___turb2__GetPressure (136)
/* Operation wrapper: */
struct __turb2__GetPressure
{
	struct _turb1__GetPressure *turb1__GetPressure;	/* optional element of type turb1:GetPressure */
};
#endif

#ifndef SOAP_TYPE___turb2__GetRawPressure
#define SOAP_TYPE___turb2__GetRawPressure (140)
/* Operation wrapper: */
struct __turb2__GetRawPressure
{
	struct _turb1__GetRawPressure *turb1__GetRawPressure;	/* optional element of type turb1:GetRawPressure */
};
#endif

#ifndef SOAP_TYPE___turb2__GetMagneticField
#define SOAP_TYPE___turb2__GetMagneticField (144)
/* Operation wrapper: */
struct __turb2__GetMagneticField
{
	struct _turb1__GetMagneticField *turb1__GetMagneticField;	/* optional element of type turb1:GetMagneticField */
};
#endif

#ifndef SOAP_TYPE___turb2__GetRawMagneticField
#define SOAP_TYPE___turb2__GetRawMagneticField (148)
/* Operation wrapper: */
struct __turb2__GetRawMagneticField
{
	struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField;	/* optional element of type turb1:GetRawMagneticField */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVectorPotential
#define SOAP_TYPE___turb2__GetVectorPotential (152)
/* Operation wrapper: */
struct __turb2__GetVectorPotential
{
	struct _turb1__GetVectorPotential *turb1__GetVectorPotential;	/* optional element of type turb1:GetVectorPotential */
};
#endif

#ifndef SOAP_TYPE___turb2__GetRawVectorPotential
#define SOAP_TYPE___turb2__GetRawVectorPotential (156)
/* Operation wrapper: */
struct __turb2__GetRawVectorPotential
{
	struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential;	/* optional element of type turb1:GetRawVectorPotential */
};
#endif

#ifndef SOAP_TYPE___turb2__GetDensity
#define SOAP_TYPE___turb2__GetDensity (160)
/* Operation wrapper: */
struct __turb2__GetDensity
{
	struct _turb1__GetDensity *turb1__GetDensity;	/* optional element of type turb1:GetDensity */
};
#endif

#ifndef SOAP_TYPE___turb2__GetDensityGradient
#define SOAP_TYPE___turb2__GetDensityGradient (164)
/* Operation wrapper: */
struct __turb2__GetDensityGradient
{
	struct _turb1__GetDensityGradient *turb1__GetDensityGradient;	/* optional element of type turb1:GetDensityGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__GetDensityHessian
#define SOAP_TYPE___turb2__GetDensityHessian (168)
/* Operation wrapper: */
struct __turb2__GetDensityHessian
{
	struct _turb1__GetDensityHessian *turb1__GetDensityHessian;	/* optional element of type turb1:GetDensityHessian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetRawDensity
#define SOAP_TYPE___turb2__GetRawDensity (172)
/* Operation wrapper: */
struct __turb2__GetRawDensity
{
	struct _turb1__GetRawDensity *turb1__GetRawDensity;	/* optional element of type turb1:GetRawDensity */
};
#endif

#ifndef SOAP_TYPE___turb2__GetForce
#define SOAP_TYPE___turb2__GetForce (176)
/* Operation wrapper: */
struct __turb2__GetForce
{
	struct _turb1__GetForce *turb1__GetForce;	/* optional element of type turb1:GetForce */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVelocityAndPressure
#define SOAP_TYPE___turb2__GetVelocityAndPressure (180)
/* Operation wrapper: */
struct __turb2__GetVelocityAndPressure
{
	struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure;	/* optional element of type turb1:GetVelocityAndPressure */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVelocityGradient
#define SOAP_TYPE___turb2__GetVelocityGradient (184)
/* Operation wrapper: */
struct __turb2__GetVelocityGradient
{
	struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient;	/* optional element of type turb1:GetVelocityGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__GetMagneticFieldGradient
#define SOAP_TYPE___turb2__GetMagneticFieldGradient (188)
/* Operation wrapper: */
struct __turb2__GetMagneticFieldGradient
{
	struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient;	/* optional element of type turb1:GetMagneticFieldGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVectorPotentialGradient
#define SOAP_TYPE___turb2__GetVectorPotentialGradient (192)
/* Operation wrapper: */
struct __turb2__GetVectorPotentialGradient
{
	struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient;	/* optional element of type turb1:GetVectorPotentialGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__GetPressureGradient
#define SOAP_TYPE___turb2__GetPressureGradient (196)
/* Operation wrapper: */
struct __turb2__GetPressureGradient
{
	struct _turb1__GetPressureGradient *turb1__GetPressureGradient;	/* optional element of type turb1:GetPressureGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__GetPressureHessian
#define SOAP_TYPE___turb2__GetPressureHessian (200)
/* Operation wrapper: */
struct __turb2__GetPressureHessian
{
	struct _turb1__GetPressureHessian *turb1__GetPressureHessian;	/* optional element of type turb1:GetPressureHessian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVelocityHessian
#define SOAP_TYPE___turb2__GetVelocityHessian (204)
/* Operation wrapper: */
struct __turb2__GetVelocityHessian
{
	struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian;	/* optional element of type turb1:GetVelocityHessian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetMagneticHessian
#define SOAP_TYPE___turb2__GetMagneticHessian (208)
/* Operation wrapper: */
struct __turb2__GetMagneticHessian
{
	struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian;	/* optional element of type turb1:GetMagneticHessian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVectorPotentialHessian
#define SOAP_TYPE___turb2__GetVectorPotentialHessian (212)
/* Operation wrapper: */
struct __turb2__GetVectorPotentialHessian
{
	struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian;	/* optional element of type turb1:GetVectorPotentialHessian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVelocityLaplacian
#define SOAP_TYPE___turb2__GetVelocityLaplacian (216)
/* Operation wrapper: */
struct __turb2__GetVelocityLaplacian
{
	struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian;	/* optional element of type turb1:GetVelocityLaplacian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetMagneticFieldLaplacian
#define SOAP_TYPE___turb2__GetMagneticFieldLaplacian (220)
/* Operation wrapper: */
struct __turb2__GetMagneticFieldLaplacian
{
	struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian;	/* optional element of type turb1:GetMagneticFieldLaplacian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetVectorPotentialLaplacian
#define SOAP_TYPE___turb2__GetVectorPotentialLaplacian (224)
/* Operation wrapper: */
struct __turb2__GetVectorPotentialLaplacian
{
	struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian;	/* optional element of type turb1:GetVectorPotentialLaplacian */
};
#endif

#ifndef SOAP_TYPE___turb2__GetPosition
#define SOAP_TYPE___turb2__GetPosition (228)
/* Operation wrapper: */
struct __turb2__GetPosition
{
	struct _turb1__GetPosition *turb1__GetPosition;	/* optional element of type turb1:GetPosition */
};
#endif

#ifndef SOAP_TYPE___turb2__GetBoxFilter
#define SOAP_TYPE___turb2__GetBoxFilter (232)
/* Operation wrapper: */
struct __turb2__GetBoxFilter
{
	struct _turb1__GetBoxFilter *turb1__GetBoxFilter;	/* optional element of type turb1:GetBoxFilter */
};
#endif

#ifndef SOAP_TYPE___turb2__GetBoxFilterSGS
#define SOAP_TYPE___turb2__GetBoxFilterSGS (236)
/* Operation wrapper: */
struct __turb2__GetBoxFilterSGS
{
	struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS;	/* optional element of type turb1:GetBoxFilterSGS */
};
#endif

#ifndef SOAP_TYPE___turb2__GetBoxFilterGradient
#define SOAP_TYPE___turb2__GetBoxFilterGradient (240)
/* Operation wrapper: */
struct __turb2__GetBoxFilterGradient
{
	struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient;	/* optional element of type turb1:GetBoxFilterGradient */
};
#endif

#ifndef SOAP_TYPE___turb2__GetThreshold
#define SOAP_TYPE___turb2__GetThreshold (244)
/* Operation wrapper: */
struct __turb2__GetThreshold
{
	struct _turb1__GetThreshold *turb1__GetThreshold;	/* optional element of type turb1:GetThreshold */
};
#endif

#ifndef SOAP_TYPE___turb2__GetLaplacianOfGradient
#define SOAP_TYPE___turb2__GetLaplacianOfGradient (248)
/* Operation wrapper: */
struct __turb2__GetLaplacianOfGradient
{
	struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient;	/* optional element of type turb1:GetLaplacianOfGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__NullOp
#define SOAP_TYPE___turb3__NullOp (250)
/* Operation wrapper: */
struct __turb3__NullOp
{
	struct _turb1__NullOp *turb1__NullOp;	/* optional element of type turb1:NullOp */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVelocity
#define SOAP_TYPE___turb3__GetVelocity (252)
/* Operation wrapper: */
struct __turb3__GetVelocity
{
	struct _turb1__GetVelocity *turb1__GetVelocity;	/* optional element of type turb1:GetVelocity */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVelocityBatch
#define SOAP_TYPE___turb3__GetVelocityBatch (254)
/* Operation wrapper: */
struct __turb3__GetVelocityBatch
{
	struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch;	/* optional element of type turb1:GetVelocityBatch */
};
#endif

#ifndef SOAP_TYPE___turb3__GetRawVelocity
#define SOAP_TYPE___turb3__GetRawVelocity (256)
/* Operation wrapper: */
struct __turb3__GetRawVelocity
{
	struct _turb1__GetRawVelocity *turb1__GetRawVelocity;	/* optional element of type turb1:GetRawVelocity */
};
#endif

#ifndef SOAP_TYPE___turb3__GetPressure
#define SOAP_TYPE___turb3__GetPressure (258)
/* Operation wrapper: */
struct __turb3__GetPressure
{
	struct _turb1__GetPressure *turb1__GetPressure;	/* optional element of type turb1:GetPressure */
};
#endif

#ifndef SOAP_TYPE___turb3__GetRawPressure
#define SOAP_TYPE___turb3__GetRawPressure (260)
/* Operation wrapper: */
struct __turb3__GetRawPressure
{
	struct _turb1__GetRawPressure *turb1__GetRawPressure;	/* optional element of type turb1:GetRawPressure */
};
#endif

#ifndef SOAP_TYPE___turb3__GetMagneticField
#define SOAP_TYPE___turb3__GetMagneticField (262)
/* Operation wrapper: */
struct __turb3__GetMagneticField
{
	struct _turb1__GetMagneticField *turb1__GetMagneticField;	/* optional element of type turb1:GetMagneticField */
};
#endif

#ifndef SOAP_TYPE___turb3__GetRawMagneticField
#define SOAP_TYPE___turb3__GetRawMagneticField (264)
/* Operation wrapper: */
struct __turb3__GetRawMagneticField
{
	struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField;	/* optional element of type turb1:GetRawMagneticField */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVectorPotential
#define SOAP_TYPE___turb3__GetVectorPotential (266)
/* Operation wrapper: */
struct __turb3__GetVectorPotential
{
	struct _turb1__GetVectorPotential *turb1__GetVectorPotential;	/* optional element of type turb1:GetVectorPotential */
};
#endif

#ifndef SOAP_TYPE___turb3__GetRawVectorPotential
#define SOAP_TYPE___turb3__GetRawVectorPotential (268)
/* Operation wrapper: */
struct __turb3__GetRawVectorPotential
{
	struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential;	/* optional element of type turb1:GetRawVectorPotential */
};
#endif

#ifndef SOAP_TYPE___turb3__GetDensity
#define SOAP_TYPE___turb3__GetDensity (270)
/* Operation wrapper: */
struct __turb3__GetDensity
{
	struct _turb1__GetDensity *turb1__GetDensity;	/* optional element of type turb1:GetDensity */
};
#endif

#ifndef SOAP_TYPE___turb3__GetDensityGradient
#define SOAP_TYPE___turb3__GetDensityGradient (272)
/* Operation wrapper: */
struct __turb3__GetDensityGradient
{
	struct _turb1__GetDensityGradient *turb1__GetDensityGradient;	/* optional element of type turb1:GetDensityGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__GetDensityHessian
#define SOAP_TYPE___turb3__GetDensityHessian (274)
/* Operation wrapper: */
struct __turb3__GetDensityHessian
{
	struct _turb1__GetDensityHessian *turb1__GetDensityHessian;	/* optional element of type turb1:GetDensityHessian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetRawDensity
#define SOAP_TYPE___turb3__GetRawDensity (276)
/* Operation wrapper: */
struct __turb3__GetRawDensity
{
	struct _turb1__GetRawDensity *turb1__GetRawDensity;	/* optional element of type turb1:GetRawDensity */
};
#endif

#ifndef SOAP_TYPE___turb3__GetForce
#define SOAP_TYPE___turb3__GetForce (278)
/* Operation wrapper: */
struct __turb3__GetForce
{
	struct _turb1__GetForce *turb1__GetForce;	/* optional element of type turb1:GetForce */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVelocityAndPressure
#define SOAP_TYPE___turb3__GetVelocityAndPressure (280)
/* Operation wrapper: */
struct __turb3__GetVelocityAndPressure
{
	struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure;	/* optional element of type turb1:GetVelocityAndPressure */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVelocityGradient
#define SOAP_TYPE___turb3__GetVelocityGradient (282)
/* Operation wrapper: */
struct __turb3__GetVelocityGradient
{
	struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient;	/* optional element of type turb1:GetVelocityGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__GetMagneticFieldGradient
#define SOAP_TYPE___turb3__GetMagneticFieldGradient (284)
/* Operation wrapper: */
struct __turb3__GetMagneticFieldGradient
{
	struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient;	/* optional element of type turb1:GetMagneticFieldGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVectorPotentialGradient
#define SOAP_TYPE___turb3__GetVectorPotentialGradient (286)
/* Operation wrapper: */
struct __turb3__GetVectorPotentialGradient
{
	struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient;	/* optional element of type turb1:GetVectorPotentialGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__GetPressureGradient
#define SOAP_TYPE___turb3__GetPressureGradient (288)
/* Operation wrapper: */
struct __turb3__GetPressureGradient
{
	struct _turb1__GetPressureGradient *turb1__GetPressureGradient;	/* optional element of type turb1:GetPressureGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__GetPressureHessian
#define SOAP_TYPE___turb3__GetPressureHessian (290)
/* Operation wrapper: */
struct __turb3__GetPressureHessian
{
	struct _turb1__GetPressureHessian *turb1__GetPressureHessian;	/* optional element of type turb1:GetPressureHessian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVelocityHessian
#define SOAP_TYPE___turb3__GetVelocityHessian (292)
/* Operation wrapper: */
struct __turb3__GetVelocityHessian
{
	struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian;	/* optional element of type turb1:GetVelocityHessian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetMagneticHessian
#define SOAP_TYPE___turb3__GetMagneticHessian (294)
/* Operation wrapper: */
struct __turb3__GetMagneticHessian
{
	struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian;	/* optional element of type turb1:GetMagneticHessian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVectorPotentialHessian
#define SOAP_TYPE___turb3__GetVectorPotentialHessian (296)
/* Operation wrapper: */
struct __turb3__GetVectorPotentialHessian
{
	struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian;	/* optional element of type turb1:GetVectorPotentialHessian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVelocityLaplacian
#define SOAP_TYPE___turb3__GetVelocityLaplacian (298)
/* Operation wrapper: */
struct __turb3__GetVelocityLaplacian
{
	struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian;	/* optional element of type turb1:GetVelocityLaplacian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetMagneticFieldLaplacian
#define SOAP_TYPE___turb3__GetMagneticFieldLaplacian (300)
/* Operation wrapper: */
struct __turb3__GetMagneticFieldLaplacian
{
	struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian;	/* optional element of type turb1:GetMagneticFieldLaplacian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetVectorPotentialLaplacian
#define SOAP_TYPE___turb3__GetVectorPotentialLaplacian (302)
/* Operation wrapper: */
struct __turb3__GetVectorPotentialLaplacian
{
	struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian;	/* optional element of type turb1:GetVectorPotentialLaplacian */
};
#endif

#ifndef SOAP_TYPE___turb3__GetPosition
#define SOAP_TYPE___turb3__GetPosition (304)
/* Operation wrapper: */
struct __turb3__GetPosition
{
	struct _turb1__GetPosition *turb1__GetPosition;	/* optional element of type turb1:GetPosition */
};
#endif

#ifndef SOAP_TYPE___turb3__GetBoxFilter
#define SOAP_TYPE___turb3__GetBoxFilter (306)
/* Operation wrapper: */
struct __turb3__GetBoxFilter
{
	struct _turb1__GetBoxFilter *turb1__GetBoxFilter;	/* optional element of type turb1:GetBoxFilter */
};
#endif

#ifndef SOAP_TYPE___turb3__GetBoxFilterSGS
#define SOAP_TYPE___turb3__GetBoxFilterSGS (308)
/* Operation wrapper: */
struct __turb3__GetBoxFilterSGS
{
	struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS;	/* optional element of type turb1:GetBoxFilterSGS */
};
#endif

#ifndef SOAP_TYPE___turb3__GetBoxFilterGradient
#define SOAP_TYPE___turb3__GetBoxFilterGradient (310)
/* Operation wrapper: */
struct __turb3__GetBoxFilterGradient
{
	struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient;	/* optional element of type turb1:GetBoxFilterGradient */
};
#endif

#ifndef SOAP_TYPE___turb3__GetThreshold
#define SOAP_TYPE___turb3__GetThreshold (312)
/* Operation wrapper: */
struct __turb3__GetThreshold
{
	struct _turb1__GetThreshold *turb1__GetThreshold;	/* optional element of type turb1:GetThreshold */
};
#endif

#ifndef SOAP_TYPE___turb3__GetLaplacianOfGradient
#define SOAP_TYPE___turb3__GetLaplacianOfGradient (314)
/* Operation wrapper: */
struct __turb3__GetLaplacianOfGradient
{
	struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient;	/* optional element of type turb1:GetLaplacianOfGradient */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (315)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (316)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (318)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (321)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (322)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__NullOp(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__NullOp *turb1__NullOp, struct _turb1__NullOpResponse *turb1__NullOpResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVelocity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocity *turb1__GetVelocity, struct _turb1__GetVelocityResponse *turb1__GetVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVelocityBatch(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch, struct _turb1__GetVelocityBatchResponse *turb1__GetVelocityBatchResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetRawVelocity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVelocity *turb1__GetRawVelocity, struct _turb1__GetRawVelocityResponse *turb1__GetRawVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressure *turb1__GetPressure, struct _turb1__GetPressureResponse *turb1__GetPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetRawPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawPressure *turb1__GetRawPressure, struct _turb1__GetRawPressureResponse *turb1__GetRawPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetMagneticField(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticField *turb1__GetMagneticField, struct _turb1__GetMagneticFieldResponse *turb1__GetMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetRawMagneticField(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField, struct _turb1__GetRawMagneticFieldResponse *turb1__GetRawMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVectorPotential(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotential *turb1__GetVectorPotential, struct _turb1__GetVectorPotentialResponse *turb1__GetVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetRawVectorPotential(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential, struct _turb1__GetRawVectorPotentialResponse *turb1__GetRawVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetDensity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensity *turb1__GetDensity, struct _turb1__GetDensityResponse *turb1__GetDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetDensityGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityGradient *turb1__GetDensityGradient, struct _turb1__GetDensityGradientResponse *turb1__GetDensityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetDensityHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityHessian *turb1__GetDensityHessian, struct _turb1__GetDensityHessianResponse *turb1__GetDensityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetRawDensity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawDensity *turb1__GetRawDensity, struct _turb1__GetRawDensityResponse *turb1__GetRawDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetForce(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetForce *turb1__GetForce, struct _turb1__GetForceResponse *turb1__GetForceResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVelocityAndPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure, struct _turb1__GetVelocityAndPressureResponse *turb1__GetVelocityAndPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVelocityGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient, struct _turb1__GetVelocityGradientResponse *turb1__GetVelocityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetMagneticFieldGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient, struct _turb1__GetMagneticFieldGradientResponse *turb1__GetMagneticFieldGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVectorPotentialGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient, struct _turb1__GetVectorPotentialGradientResponse *turb1__GetVectorPotentialGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetPressureGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureGradient *turb1__GetPressureGradient, struct _turb1__GetPressureGradientResponse *turb1__GetPressureGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetPressureHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureHessian *turb1__GetPressureHessian, struct _turb1__GetPressureHessianResponse *turb1__GetPressureHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVelocityHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian, struct _turb1__GetVelocityHessianResponse *turb1__GetVelocityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetMagneticHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian, struct _turb1__GetMagneticHessianResponse *turb1__GetMagneticHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVectorPotentialHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian, struct _turb1__GetVectorPotentialHessianResponse *turb1__GetVectorPotentialHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVelocityLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian, struct _turb1__GetVelocityLaplacianResponse *turb1__GetVelocityLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetMagneticFieldLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian, struct _turb1__GetMagneticFieldLaplacianResponse *turb1__GetMagneticFieldLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetVectorPotentialLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian, struct _turb1__GetVectorPotentialLaplacianResponse *turb1__GetVectorPotentialLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetPosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPosition *turb1__GetPosition, struct _turb1__GetPositionResponse *turb1__GetPositionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetBoxFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilter *turb1__GetBoxFilter, struct _turb1__GetBoxFilterResponse *turb1__GetBoxFilterResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetBoxFilterSGS(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS, struct _turb1__GetBoxFilterSGSResponse *turb1__GetBoxFilterSGSResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetBoxFilterGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient, struct _turb1__GetBoxFilterGradientResponse *turb1__GetBoxFilterGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetThreshold *turb1__GetThreshold, struct _turb1__GetThresholdResponse *turb1__GetThresholdResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb2__GetLaplacianOfGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient, struct _turb1__GetLaplacianOfGradientResponse *turb1__GetLaplacianOfGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__NullOp(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__NullOp *turb1__NullOp, struct _turb1__NullOpResponse *turb1__NullOpResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVelocity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocity *turb1__GetVelocity, struct _turb1__GetVelocityResponse *turb1__GetVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVelocityBatch(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch, struct _turb1__GetVelocityBatchResponse *turb1__GetVelocityBatchResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetRawVelocity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVelocity *turb1__GetRawVelocity, struct _turb1__GetRawVelocityResponse *turb1__GetRawVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressure *turb1__GetPressure, struct _turb1__GetPressureResponse *turb1__GetPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetRawPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawPressure *turb1__GetRawPressure, struct _turb1__GetRawPressureResponse *turb1__GetRawPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetMagneticField(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticField *turb1__GetMagneticField, struct _turb1__GetMagneticFieldResponse *turb1__GetMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetRawMagneticField(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField, struct _turb1__GetRawMagneticFieldResponse *turb1__GetRawMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVectorPotential(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotential *turb1__GetVectorPotential, struct _turb1__GetVectorPotentialResponse *turb1__GetVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetRawVectorPotential(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential, struct _turb1__GetRawVectorPotentialResponse *turb1__GetRawVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetDensity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensity *turb1__GetDensity, struct _turb1__GetDensityResponse *turb1__GetDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetDensityGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityGradient *turb1__GetDensityGradient, struct _turb1__GetDensityGradientResponse *turb1__GetDensityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetDensityHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityHessian *turb1__GetDensityHessian, struct _turb1__GetDensityHessianResponse *turb1__GetDensityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetRawDensity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawDensity *turb1__GetRawDensity, struct _turb1__GetRawDensityResponse *turb1__GetRawDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetForce(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetForce *turb1__GetForce, struct _turb1__GetForceResponse *turb1__GetForceResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVelocityAndPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure, struct _turb1__GetVelocityAndPressureResponse *turb1__GetVelocityAndPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVelocityGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient, struct _turb1__GetVelocityGradientResponse *turb1__GetVelocityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetMagneticFieldGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient, struct _turb1__GetMagneticFieldGradientResponse *turb1__GetMagneticFieldGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVectorPotentialGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient, struct _turb1__GetVectorPotentialGradientResponse *turb1__GetVectorPotentialGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetPressureGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureGradient *turb1__GetPressureGradient, struct _turb1__GetPressureGradientResponse *turb1__GetPressureGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetPressureHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureHessian *turb1__GetPressureHessian, struct _turb1__GetPressureHessianResponse *turb1__GetPressureHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVelocityHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian, struct _turb1__GetVelocityHessianResponse *turb1__GetVelocityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetMagneticHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian, struct _turb1__GetMagneticHessianResponse *turb1__GetMagneticHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVectorPotentialHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian, struct _turb1__GetVectorPotentialHessianResponse *turb1__GetVectorPotentialHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVelocityLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian, struct _turb1__GetVelocityLaplacianResponse *turb1__GetVelocityLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetMagneticFieldLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian, struct _turb1__GetMagneticFieldLaplacianResponse *turb1__GetMagneticFieldLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetVectorPotentialLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian, struct _turb1__GetVectorPotentialLaplacianResponse *turb1__GetVectorPotentialLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetPosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPosition *turb1__GetPosition, struct _turb1__GetPositionResponse *turb1__GetPositionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetBoxFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilter *turb1__GetBoxFilter, struct _turb1__GetBoxFilterResponse *turb1__GetBoxFilterResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetBoxFilterSGS(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS, struct _turb1__GetBoxFilterSGSResponse *turb1__GetBoxFilterSGSResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetBoxFilterGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient, struct _turb1__GetBoxFilterGradientResponse *turb1__GetBoxFilterGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetThreshold *turb1__GetThreshold, struct _turb1__GetThresholdResponse *turb1__GetThresholdResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb3__GetLaplacianOfGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient, struct _turb1__GetLaplacianOfGradientResponse *turb1__GetLaplacianOfGradientResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */

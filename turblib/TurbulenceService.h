/* TurbulenceService.h
   Generated by wsdl2h 2.8.8 from http://turbulence.pha.jhu.edu/service/turbulence.asmx?WSDL and typemap.dat
   2014-08-01 18:48:22 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on TurbulenceService.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

turb1 = "http://turbulence.pha.jhu.edu/"

*/

#define SOAP_NAMESPACE_OF_turb1	"http://turbulence.pha.jhu.edu/"
//gsoap turb1 schema namespace:	http://turbulence.pha.jhu.edu/
//gsoap turb1 schema elementForm:	qualified
//gsoap turb1 schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/// "http://turbulence.pha.jhu.edu/":SpatialInterpolation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'turb1__SpatialInterpolation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum turb1__SpatialInterpolation
{
	turb1__SpatialInterpolation__None,	///< xs:string value="None"
	turb1__SpatialInterpolation__None_USCOREFd4,	///< xs:string value="None_Fd4"
	turb1__SpatialInterpolation__None_USCOREFd6,	///< xs:string value="None_Fd6"
	turb1__SpatialInterpolation__None_USCOREFd8,	///< xs:string value="None_Fd8"
	turb1__SpatialInterpolation__Fd4Lag4,	///< xs:string value="Fd4Lag4"
	turb1__SpatialInterpolation__Lag4,	///< xs:string value="Lag4"
	turb1__SpatialInterpolation__Lag6,	///< xs:string value="Lag6"
	turb1__SpatialInterpolation__Lag8,	///< xs:string value="Lag8"
	turb1__SpatialInterpolation__M1Q4,	///< xs:string value="M1Q4"
	turb1__SpatialInterpolation__M2Q4,	///< xs:string value="M2Q4"
	turb1__SpatialInterpolation__M3Q4,	///< xs:string value="M3Q4"
	turb1__SpatialInterpolation__M4Q4,	///< xs:string value="M4Q4"
	turb1__SpatialInterpolation__M1Q6,	///< xs:string value="M1Q6"
	turb1__SpatialInterpolation__M2Q6,	///< xs:string value="M2Q6"
	turb1__SpatialInterpolation__M3Q6,	///< xs:string value="M3Q6"
	turb1__SpatialInterpolation__M4Q6,	///< xs:string value="M4Q6"
	turb1__SpatialInterpolation__M1Q8,	///< xs:string value="M1Q8"
	turb1__SpatialInterpolation__M2Q8,	///< xs:string value="M2Q8"
	turb1__SpatialInterpolation__M3Q8,	///< xs:string value="M3Q8"
	turb1__SpatialInterpolation__M4Q8,	///< xs:string value="M4Q8"
	turb1__SpatialInterpolation__M1Q10,	///< xs:string value="M1Q10"
	turb1__SpatialInterpolation__M2Q10,	///< xs:string value="M2Q10"
	turb1__SpatialInterpolation__M3Q10,	///< xs:string value="M3Q10"
	turb1__SpatialInterpolation__M4Q10,	///< xs:string value="M4Q10"
	turb1__SpatialInterpolation__M1Q12,	///< xs:string value="M1Q12"
	turb1__SpatialInterpolation__M2Q12,	///< xs:string value="M2Q12"
	turb1__SpatialInterpolation__M3Q12,	///< xs:string value="M3Q12"
	turb1__SpatialInterpolation__M4Q12,	///< xs:string value="M4Q12"
	turb1__SpatialInterpolation__M1Q14,	///< xs:string value="M1Q14"
	turb1__SpatialInterpolation__M2Q14,	///< xs:string value="M2Q14"
	turb1__SpatialInterpolation__M3Q14,	///< xs:string value="M3Q14"
	turb1__SpatialInterpolation__M4Q14,	///< xs:string value="M4Q14"
};

/// "http://turbulence.pha.jhu.edu/":TemporalInterpolation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'turb1__TemporalInterpolation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum turb1__TemporalInterpolation
{
	turb1__TemporalInterpolation__None,	///< xs:string value="None"
	turb1__TemporalInterpolation__PCHIP,	///< xs:string value="PCHIP"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/// "http://turbulence.pha.jhu.edu/":ArrayOfPoint3 is a complexType.
struct turb1__ArrayOfPoint3
{
/// Size of array of struct turb1__Point3* is 0..unbounded
   $int                                  __sizePoint3                   0;
/// Array struct turb1__Point3* of length 0..unbounded
    struct turb1__Point3*                Point3                         0;
};

/// "http://turbulence.pha.jhu.edu/":Point3 is a complexType.
struct turb1__Point3
{
/// Element x of type xs:float.
    float                                x                              1;	///< Required element.
/// Element y of type xs:float.
    float                                y                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVector3 is a complexType.
struct turb1__ArrayOfVector3
{
/// Size of array of struct turb1__Vector3* is 0..unbounded
   $int                                  __sizeVector3                  0;
/// Array struct turb1__Vector3* of length 0..unbounded
    struct turb1__Vector3*               Vector3                        0;
};

/// "http://turbulence.pha.jhu.edu/":Vector3 is a complexType.
struct turb1__Vector3
{
/// Element x of type xs:float.
    float                                x                              1;	///< Required element.
/// Element y of type xs:float.
    float                                y                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfPressure is a complexType.
struct turb1__ArrayOfPressure
{
/// Size of array of struct turb1__Pressure* is 0..unbounded
   $int                                  __sizePressure                 0;
/// Array struct turb1__Pressure* of length 0..unbounded
    struct turb1__Pressure*              Pressure                       0;
};

/// "http://turbulence.pha.jhu.edu/":Pressure is a complexType.
struct turb1__Pressure
{
/// Element p of type xs:float.
    float                                p                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian is a complexType.
struct turb1__ArrayOfPressureHessian
{
/// Size of array of struct turb1__PressureHessian* is 0..unbounded
   $int                                  __sizePressureHessian          0;
/// Array struct turb1__PressureHessian* of length 0..unbounded
    struct turb1__PressureHessian*       PressureHessian                0;
};

/// "http://turbulence.pha.jhu.edu/":PressureHessian is a complexType.
struct turb1__PressureHessian
{
/// Element d2pdxdx of type xs:float.
    float                                d2pdxdx                        1;	///< Required element.
/// Element d2pdxdy of type xs:float.
    float                                d2pdxdy                        1;	///< Required element.
/// Element d2pdxdz of type xs:float.
    float                                d2pdxdz                        1;	///< Required element.
/// Element d2pdydy of type xs:float.
    float                                d2pdydy                        1;	///< Required element.
/// Element d2pdydz of type xs:float.
    float                                d2pdydz                        1;	///< Required element.
/// Element d2pdzdz of type xs:float.
    float                                d2pdzdz                        1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVector3P is a complexType.
struct turb1__ArrayOfVector3P
{
/// Size of array of struct turb1__Vector3P* is 0..unbounded
   $int                                  __sizeVector3P                 0;
/// Array struct turb1__Vector3P* of length 0..unbounded
    struct turb1__Vector3P*              Vector3P                       0;
};

/// "http://turbulence.pha.jhu.edu/":Vector3P is a complexType.
struct turb1__Vector3P
{
/// Element x of type xs:float.
    float                                x                              1;	///< Required element.
/// Element y of type xs:float.
    float                                y                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
/// Element p of type xs:float.
    float                                p                              1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient is a complexType.
struct turb1__ArrayOfVelocityGradient
{
/// Size of array of struct turb1__VelocityGradient* is 0..unbounded
   $int                                  __sizeVelocityGradient         0;
/// Array struct turb1__VelocityGradient* of length 0..unbounded
    struct turb1__VelocityGradient*      VelocityGradient               0;
};

/// "http://turbulence.pha.jhu.edu/":VelocityGradient is a complexType.
struct turb1__VelocityGradient
{
/// Element duxdx of type xs:float.
    float                                duxdx                          1;	///< Required element.
/// Element duxdy of type xs:float.
    float                                duxdy                          1;	///< Required element.
/// Element duxdz of type xs:float.
    float                                duxdz                          1;	///< Required element.
/// Element duydx of type xs:float.
    float                                duydx                          1;	///< Required element.
/// Element duydy of type xs:float.
    float                                duydy                          1;	///< Required element.
/// Element duydz of type xs:float.
    float                                duydz                          1;	///< Required element.
/// Element duzdx of type xs:float.
    float                                duzdx                          1;	///< Required element.
/// Element duzdy of type xs:float.
    float                                duzdy                          1;	///< Required element.
/// Element duzdz of type xs:float.
    float                                duzdz                          1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian is a complexType.
struct turb1__ArrayOfVelocityHessian
{
/// Size of array of struct turb1__VelocityHessian* is 0..unbounded
   $int                                  __sizeVelocityHessian          0;
/// Array struct turb1__VelocityHessian* of length 0..unbounded
    struct turb1__VelocityHessian*       VelocityHessian                0;
};

/// "http://turbulence.pha.jhu.edu/":VelocityHessian is a complexType.
struct turb1__VelocityHessian
{
/// Element d2uxdxdx of type xs:float.
    float                                d2uxdxdx                       1;	///< Required element.
/// Element d2uxdxdy of type xs:float.
    float                                d2uxdxdy                       1;	///< Required element.
/// Element d2uxdxdz of type xs:float.
    float                                d2uxdxdz                       1;	///< Required element.
/// Element d2uxdydy of type xs:float.
    float                                d2uxdydy                       1;	///< Required element.
/// Element d2uxdydz of type xs:float.
    float                                d2uxdydz                       1;	///< Required element.
/// Element d2uxdzdz of type xs:float.
    float                                d2uxdzdz                       1;	///< Required element.
/// Element d2uydxdx of type xs:float.
    float                                d2uydxdx                       1;	///< Required element.
/// Element d2uydxdy of type xs:float.
    float                                d2uydxdy                       1;	///< Required element.
/// Element d2uydxdz of type xs:float.
    float                                d2uydxdz                       1;	///< Required element.
/// Element d2uydydy of type xs:float.
    float                                d2uydydy                       1;	///< Required element.
/// Element d2uydydz of type xs:float.
    float                                d2uydydz                       1;	///< Required element.
/// Element d2uydzdz of type xs:float.
    float                                d2uydzdz                       1;	///< Required element.
/// Element d2uzdxdx of type xs:float.
    float                                d2uzdxdx                       1;	///< Required element.
/// Element d2uzdxdy of type xs:float.
    float                                d2uzdxdy                       1;	///< Required element.
/// Element d2uzdxdz of type xs:float.
    float                                d2uzdxdz                       1;	///< Required element.
/// Element d2uzdydy of type xs:float.
    float                                d2uzdydy                       1;	///< Required element.
/// Element d2uzdydz of type xs:float.
    float                                d2uzdydz                       1;	///< Required element.
/// Element d2uzdzdz of type xs:float.
    float                                d2uzdzdz                       1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfSGSTensor is a complexType.
struct turb1__ArrayOfSGSTensor
{
/// Size of array of struct turb1__SGSTensor* is 0..unbounded
   $int                                  __sizeSGSTensor                0;
/// Array struct turb1__SGSTensor* of length 0..unbounded
    struct turb1__SGSTensor*             SGSTensor                      0;
};

/// "http://turbulence.pha.jhu.edu/":SGSTensor is a complexType.
struct turb1__SGSTensor
{
/// Element xx of type xs:float.
    float                                xx                             1;	///< Required element.
/// Element yy of type xs:float.
    float                                yy                             1;	///< Required element.
/// Element zz of type xs:float.
    float                                zz                             1;	///< Required element.
/// Element xy of type xs:float.
    float                                xy                             1;	///< Required element.
/// Element xz of type xs:float.
    float                                xz                             1;	///< Required element.
/// Element yz of type xs:float.
    float                                yz                             1;	///< Required element.
};

/// "http://turbulence.pha.jhu.edu/":ArrayOfThresholdInfo is a complexType.
struct turb1__ArrayOfThresholdInfo
{
/// Size of array of struct turb1__ThresholdInfo* is 0..unbounded
   $int                                  __sizeThresholdInfo            0;
/// Array struct turb1__ThresholdInfo* of length 0..unbounded
    struct turb1__ThresholdInfo*         ThresholdInfo                  0;
};

/// "http://turbulence.pha.jhu.edu/":ThresholdInfo is a complexType.
struct turb1__ThresholdInfo
{
/// Element x of type xs:int.
    int                                  x                              1;	///< Required element.
/// Element y of type xs:int.
    int                                  y                              1;	///< Required element.
/// Element z of type xs:int.
    int                                  z                              1;	///< Required element.
/// Element value of type xs:float.
    float                                value                          1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":NullOp

/// "http://turbulence.pha.jhu.edu/":NullOp is a complexType.
struct _turb1__NullOp
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":NullOpResponse

/// "http://turbulence.pha.jhu.edu/":NullOpResponse is a complexType.
struct _turb1__NullOpResponse
{
/// Element NullOpResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        NullOpResult                   0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocity

/// "http://turbulence.pha.jhu.edu/":GetVelocity is a complexType.
struct _turb1__GetVelocity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityResponse is a complexType.
struct _turb1__GetVelocityResponse
{
/// Element GetVelocityResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVelocityResult              0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityBatch

/// "http://turbulence.pha.jhu.edu/":GetVelocityBatch is a complexType.
struct _turb1__GetVelocityBatch
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityBatchResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityBatchResponse is a complexType.
struct _turb1__GetVelocityBatchResponse
{
/// Element GetVelocityBatchResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVelocityBatchResult         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVelocity

/// "http://turbulence.pha.jhu.edu/":GetRawVelocity is a complexType.
struct _turb1__GetRawVelocity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVelocityResponse

/// "http://turbulence.pha.jhu.edu/":GetRawVelocityResponse is a complexType.
struct _turb1__GetRawVelocityResponse
{
/// Element GetRawVelocityResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawVelocityResult           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressure

/// "http://turbulence.pha.jhu.edu/":GetPressure is a complexType.
struct _turb1__GetPressure
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureResponse

/// "http://turbulence.pha.jhu.edu/":GetPressureResponse is a complexType.
struct _turb1__GetPressureResponse
{
/// Element GetPressureResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressure.
    struct turb1__ArrayOfPressure*       GetPressureResult              0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawPressure

/// "http://turbulence.pha.jhu.edu/":GetRawPressure is a complexType.
struct _turb1__GetRawPressure
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawPressureResponse

/// "http://turbulence.pha.jhu.edu/":GetRawPressureResponse is a complexType.
struct _turb1__GetRawPressureResponse
{
/// Element GetRawPressureResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawPressureResult           0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticField

/// "http://turbulence.pha.jhu.edu/":GetMagneticField is a complexType.
struct _turb1__GetMagneticField
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldResponse is a complexType.
struct _turb1__GetMagneticFieldResponse
{
/// Element GetMagneticFieldResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetMagneticFieldResult         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawMagneticField

/// "http://turbulence.pha.jhu.edu/":GetRawMagneticField is a complexType.
struct _turb1__GetRawMagneticField
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawMagneticFieldResponse

/// "http://turbulence.pha.jhu.edu/":GetRawMagneticFieldResponse is a complexType.
struct _turb1__GetRawMagneticFieldResponse
{
/// Element GetRawMagneticFieldResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawMagneticFieldResult      0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotential

/// "http://turbulence.pha.jhu.edu/":GetVectorPotential is a complexType.
struct _turb1__GetVectorPotential
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialResponse is a complexType.
struct _turb1__GetVectorPotentialResponse
{
/// Element GetVectorPotentialResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVectorPotentialResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVectorPotential

/// "http://turbulence.pha.jhu.edu/":GetRawVectorPotential is a complexType.
struct _turb1__GetRawVectorPotential
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawVectorPotentialResponse

/// "http://turbulence.pha.jhu.edu/":GetRawVectorPotentialResponse is a complexType.
struct _turb1__GetRawVectorPotentialResponse
{
/// Element GetRawVectorPotentialResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawVectorPotentialResult    0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensity

/// "http://turbulence.pha.jhu.edu/":GetDensity is a complexType.
struct _turb1__GetDensity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityResponse

/// "http://turbulence.pha.jhu.edu/":GetDensityResponse is a complexType.
struct _turb1__GetDensityResponse
{
/// Element GetDensityResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressure.
    struct turb1__ArrayOfPressure*       GetDensityResult               0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityGradient

/// "http://turbulence.pha.jhu.edu/":GetDensityGradient is a complexType.
struct _turb1__GetDensityGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetDensityGradientResponse is a complexType.
struct _turb1__GetDensityGradientResponse
{
/// Element GetDensityGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetDensityGradientResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityHessian

/// "http://turbulence.pha.jhu.edu/":GetDensityHessian is a complexType.
struct _turb1__GetDensityHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetDensityHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetDensityHessianResponse is a complexType.
struct _turb1__GetDensityHessianResponse
{
/// Element GetDensityHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian.
    struct turb1__ArrayOfPressureHessian*  GetDensityHessianResult        0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawDensity

/// "http://turbulence.pha.jhu.edu/":GetRawDensity is a complexType.
struct _turb1__GetRawDensity
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetRawDensityResponse

/// "http://turbulence.pha.jhu.edu/":GetRawDensityResponse is a complexType.
struct _turb1__GetRawDensityResponse
{
/// Element GetRawDensityResult of type xs:base64Binary.
    struct xsd__base64Binary*            GetRawDensityResult            0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetForce

/// "http://turbulence.pha.jhu.edu/":GetForce is a complexType.
struct _turb1__GetForce
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetForceResponse

/// "http://turbulence.pha.jhu.edu/":GetForceResponse is a complexType.
struct _turb1__GetForceResponse
{
/// Element GetForceResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetForceResult                 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityAndPressure

/// "http://turbulence.pha.jhu.edu/":GetVelocityAndPressure is a complexType.
struct _turb1__GetVelocityAndPressure
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityAndPressureResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityAndPressureResponse is a complexType.
struct _turb1__GetVelocityAndPressureResponse
{
/// Element GetVelocityAndPressureResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3P.
    struct turb1__ArrayOfVector3P*       GetVelocityAndPressureResult   0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityGradient

/// "http://turbulence.pha.jhu.edu/":GetVelocityGradient is a complexType.
struct _turb1__GetVelocityGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityGradientResponse is a complexType.
struct _turb1__GetVelocityGradientResponse
{
/// Element GetVelocityGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetVelocityGradientResult      0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradient

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradient is a complexType.
struct _turb1__GetMagneticFieldGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldGradientResponse is a complexType.
struct _turb1__GetMagneticFieldGradientResponse
{
/// Element GetMagneticFieldGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetMagneticFieldGradientResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradient

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradient is a complexType.
struct _turb1__GetVectorPotentialGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialGradientResponse is a complexType.
struct _turb1__GetVectorPotentialGradientResponse
{
/// Element GetVectorPotentialGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetVectorPotentialGradientResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureGradient

/// "http://turbulence.pha.jhu.edu/":GetPressureGradient is a complexType.
struct _turb1__GetPressureGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetPressureGradientResponse is a complexType.
struct _turb1__GetPressureGradientResponse
{
/// Element GetPressureGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetPressureGradientResult      0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureHessian

/// "http://turbulence.pha.jhu.edu/":GetPressureHessian is a complexType.
struct _turb1__GetPressureHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPressureHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetPressureHessianResponse is a complexType.
struct _turb1__GetPressureHessianResponse
{
/// Element GetPressureHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPressureHessian.
    struct turb1__ArrayOfPressureHessian*  GetPressureHessianResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityHessian

/// "http://turbulence.pha.jhu.edu/":GetVelocityHessian is a complexType.
struct _turb1__GetVelocityHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityHessianResponse is a complexType.
struct _turb1__GetVelocityHessianResponse
{
/// Element GetVelocityHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian.
    struct turb1__ArrayOfVelocityHessian*  GetVelocityHessianResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticHessian

/// "http://turbulence.pha.jhu.edu/":GetMagneticHessian is a complexType.
struct _turb1__GetMagneticHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticHessianResponse is a complexType.
struct _turb1__GetMagneticHessianResponse
{
/// Element GetMagneticHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian.
    struct turb1__ArrayOfVelocityHessian*  GetMagneticHessianResult       0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessian

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessian is a complexType.
struct _turb1__GetVectorPotentialHessian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessianResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialHessianResponse is a complexType.
struct _turb1__GetVectorPotentialHessianResponse
{
/// Element GetVectorPotentialHessianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityHessian.
    struct turb1__ArrayOfVelocityHessian*  GetVectorPotentialHessianResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityLaplacian

/// "http://turbulence.pha.jhu.edu/":GetVelocityLaplacian is a complexType.
struct _turb1__GetVelocityLaplacian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVelocityLaplacianResponse

/// "http://turbulence.pha.jhu.edu/":GetVelocityLaplacianResponse is a complexType.
struct _turb1__GetVelocityLaplacianResponse
{
/// Element GetVelocityLaplacianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVelocityLaplacianResult     0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacian

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacian is a complexType.
struct _turb1__GetMagneticFieldLaplacian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacianResponse

/// "http://turbulence.pha.jhu.edu/":GetMagneticFieldLaplacianResponse is a complexType.
struct _turb1__GetMagneticFieldLaplacianResponse
{
/// Element GetMagneticFieldLaplacianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetMagneticFieldLaplacianResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacian

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacian is a complexType.
struct _turb1__GetVectorPotentialLaplacian
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacianResponse

/// "http://turbulence.pha.jhu.edu/":GetVectorPotentialLaplacianResponse is a complexType.
struct _turb1__GetVectorPotentialLaplacianResponse
{
/// Element GetVectorPotentialLaplacianResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetVectorPotentialLaplacianResult 0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPosition

/// "http://turbulence.pha.jhu.edu/":GetPosition is a complexType.
struct _turb1__GetPosition
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element StartTime of type xs:float.
    float                                StartTime                      1;	///< Required element.
/// Element EndTime of type xs:float.
    float                                EndTime                        1;	///< Required element.
/// Element dt of type xs:float.
    float                                dt                             1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetPositionResponse

/// "http://turbulence.pha.jhu.edu/":GetPositionResponse is a complexType.
struct _turb1__GetPositionResponse
{
/// Element GetPositionResult of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         GetPositionResult              0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilter

/// "http://turbulence.pha.jhu.edu/":GetBoxFilter is a complexType.
struct _turb1__GetBoxFilter
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterResponse is a complexType.
struct _turb1__GetBoxFilterResponse
{
/// Element GetBoxFilterResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVector3.
    struct turb1__ArrayOfVector3*        GetBoxFilterResult             0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGS

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGS is a complexType.
struct _turb1__GetBoxFilterSGS
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterSGSResponse is a complexType.
struct _turb1__GetBoxFilterSGSResponse
{
/// Element GetBoxFilterSGSResult of type "http://turbulence.pha.jhu.edu/":ArrayOfSGSTensor.
    struct turb1__ArrayOfSGSTensor*      GetBoxFilterSGSResult          0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterGradient

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterGradient is a complexType.
struct _turb1__GetBoxFilterGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element filterwidth of type xs:float.
    float                                filterwidth                    1;	///< Required element.
/// Element spacing of type xs:float.
    float                                spacing                        1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetBoxFilterGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetBoxFilterGradientResponse is a complexType.
struct _turb1__GetBoxFilterGradientResponse
{
/// Element GetBoxFilterGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetBoxFilterGradientResult     0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetThreshold

/// "http://turbulence.pha.jhu.edu/":GetThreshold is a complexType.
struct _turb1__GetThreshold
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element threshold of type xs:float.
    float                                threshold                      1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element X of type xs:int.
    int                                  X                              1;	///< Required element.
/// Element Y of type xs:int.
    int                                  Y                              1;	///< Required element.
/// Element Z of type xs:int.
    int                                  Z                              1;	///< Required element.
/// Element Xwidth of type xs:int.
    int                                  Xwidth                         1;	///< Required element.
/// Element Ywidth of type xs:int.
    int                                  Ywidth                         1;	///< Required element.
/// Element Zwidth of type xs:int.
    int                                  Zwidth                         1;	///< Required element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetThresholdResponse

/// "http://turbulence.pha.jhu.edu/":GetThresholdResponse is a complexType.
struct _turb1__GetThresholdResponse
{
/// Element GetThresholdResult of type "http://turbulence.pha.jhu.edu/":ArrayOfThresholdInfo.
    struct turb1__ArrayOfThresholdInfo*  GetThresholdResult             0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradient

/// "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradient is a complexType.
struct _turb1__GetLaplacianOfGradient
{
/// Element authToken of type xs:string.
    char*                                authToken                      0;	///< Optional element.
/// Element dataset of type xs:string.
    char*                                dataset                        0;	///< Optional element.
/// Element field of type xs:string.
    char*                                field                          0;	///< Optional element.
/// Element time of type xs:float.
    float                                time                           1;	///< Required element.
/// Element spatialInterpolation of type "http://turbulence.pha.jhu.edu/":SpatialInterpolation.
    enum turb1__SpatialInterpolation     spatialInterpolation           1;	///< Required element.
/// Element temporalInterpolation of type "http://turbulence.pha.jhu.edu/":TemporalInterpolation.
    enum turb1__TemporalInterpolation    temporalInterpolation          1;	///< Required element.
/// Element points of type "http://turbulence.pha.jhu.edu/":ArrayOfPoint3.
    struct turb1__ArrayOfPoint3*         points                         0;	///< Optional element.
};


/// Top-level root element "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradientResponse

/// "http://turbulence.pha.jhu.edu/":GetLaplacianOfGradientResponse is a complexType.
struct _turb1__GetLaplacianOfGradientResponse
{
/// Element GetLaplacianOfGradientResult of type "http://turbulence.pha.jhu.edu/":ArrayOfVelocityGradient.
    struct turb1__ArrayOfVelocityGradient*  GetLaplacianOfGradientResult   0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://turbulence.pha.jhu.edu/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap turb2 service name:	TurbulenceServiceSoap 
//gsoap turb2 service type:	TurbulenceServiceSoap 
//gsoap turb2 service port:	http://turbulence.pha.jhu.edu/service/turbulence.asmx 
//gsoap turb2 service namespace:	http://turbulence.pha.jhu.edu/TurbulenceServiceSoap 
//gsoap turb2 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap turb3 service name:	TurbulenceServiceSoap12 
//gsoap turb3 service type:	TurbulenceServiceSoap 
//gsoap turb3 service port:	http://turbulence.pha.jhu.edu/service/turbulence.asmx 
//gsoap turb3 service namespace:	http://turbulence.pha.jhu.edu/TurbulenceServiceSoap12 
//gsoap turb3 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref TurbulenceServiceSoap

  - @ref TurbulenceServiceSoap12

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page TurbulenceServiceSoap Binding "TurbulenceServiceSoap"

@section TurbulenceServiceSoap_operations Operations of Binding  "TurbulenceServiceSoap"

  - @ref __turb2__NullOp

  - @ref __turb2__GetVelocity

  - @ref __turb2__GetVelocityBatch

  - @ref __turb2__GetRawVelocity

  - @ref __turb2__GetPressure

  - @ref __turb2__GetRawPressure

  - @ref __turb2__GetMagneticField

  - @ref __turb2__GetRawMagneticField

  - @ref __turb2__GetVectorPotential

  - @ref __turb2__GetRawVectorPotential

  - @ref __turb2__GetDensity

  - @ref __turb2__GetDensityGradient

  - @ref __turb2__GetDensityHessian

  - @ref __turb2__GetRawDensity

  - @ref __turb2__GetForce

  - @ref __turb2__GetVelocityAndPressure

  - @ref __turb2__GetVelocityGradient

  - @ref __turb2__GetMagneticFieldGradient

  - @ref __turb2__GetVectorPotentialGradient

  - @ref __turb2__GetPressureGradient

  - @ref __turb2__GetPressureHessian

  - @ref __turb2__GetVelocityHessian

  - @ref __turb2__GetMagneticHessian

  - @ref __turb2__GetVectorPotentialHessian

  - @ref __turb2__GetVelocityLaplacian

  - @ref __turb2__GetMagneticFieldLaplacian

  - @ref __turb2__GetVectorPotentialLaplacian

  - @ref __turb2__GetPosition

  - @ref __turb2__GetBoxFilter

  - @ref __turb2__GetBoxFilterSGS

  - @ref __turb2__GetBoxFilterGradient

  - @ref __turb2__GetThreshold

  - @ref __turb2__GetLaplacianOfGradient

@section TurbulenceServiceSoap_ports Endpoints of Binding  "TurbulenceServiceSoap"

  - http://turbulence.pha.jhu.edu/service/turbulence.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page TurbulenceServiceSoap12 Binding "TurbulenceServiceSoap12"

@section TurbulenceServiceSoap12_operations Operations of Binding  "TurbulenceServiceSoap12"

  - @ref __turb3__NullOp

  - @ref __turb3__GetVelocity

  - @ref __turb3__GetVelocityBatch

  - @ref __turb3__GetRawVelocity

  - @ref __turb3__GetPressure

  - @ref __turb3__GetRawPressure

  - @ref __turb3__GetMagneticField

  - @ref __turb3__GetRawMagneticField

  - @ref __turb3__GetVectorPotential

  - @ref __turb3__GetRawVectorPotential

  - @ref __turb3__GetDensity

  - @ref __turb3__GetDensityGradient

  - @ref __turb3__GetDensityHessian

  - @ref __turb3__GetRawDensity

  - @ref __turb3__GetForce

  - @ref __turb3__GetVelocityAndPressure

  - @ref __turb3__GetVelocityGradient

  - @ref __turb3__GetMagneticFieldGradient

  - @ref __turb3__GetVectorPotentialGradient

  - @ref __turb3__GetPressureGradient

  - @ref __turb3__GetPressureHessian

  - @ref __turb3__GetVelocityHessian

  - @ref __turb3__GetMagneticHessian

  - @ref __turb3__GetVectorPotentialHessian

  - @ref __turb3__GetVelocityLaplacian

  - @ref __turb3__GetMagneticFieldLaplacian

  - @ref __turb3__GetVectorPotentialLaplacian

  - @ref __turb3__GetPosition

  - @ref __turb3__GetBoxFilter

  - @ref __turb3__GetBoxFilterSGS

  - @ref __turb3__GetBoxFilterGradient

  - @ref __turb3__GetThreshold

  - @ref __turb3__GetLaplacianOfGradient

@section TurbulenceServiceSoap12_ports Endpoints of Binding  "TurbulenceServiceSoap12"

  - http://turbulence.pha.jhu.edu/service/turbulence.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TurbulenceServiceSoap                                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__NullOp                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__NullOp" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Perform a null operation -- for testing throughput

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/NullOp"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/NullOp"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/NullOpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__NullOp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // response parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__NullOp(
    struct soap *soap,
    // request parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // response parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	NullOp document
//gsoap turb2 service method-encoding:	NullOp literal
//gsoap turb2 service method-action:	NullOp http://turbulence.pha.jhu.edu/NullOp
//gsoap turb2 service method-output-action:	NullOp http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/NullOpResponse
int __turb2__NullOp(
    struct _turb1__NullOp*              turb1__NullOp,	///< Request parameter
    struct _turb1__NullOpResponse*      turb1__NullOpResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVelocity                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVelocity" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the velocity at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVelocity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // response parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVelocity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // response parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVelocity document
//gsoap turb2 service method-encoding:	GetVelocity literal
//gsoap turb2 service method-action:	GetVelocity http://turbulence.pha.jhu.edu/GetVelocity
//gsoap turb2 service method-output-action:	GetVelocity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityResponse
int __turb2__GetVelocity(
    struct _turb1__GetVelocity*         turb1__GetVelocity,	///< Request parameter
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVelocityBatch                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVelocityBatch" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the velocity at a number of points for a given time (allow
batching).

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityBatch"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityBatch"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityBatchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVelocityBatch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // response parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVelocityBatch(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // response parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVelocityBatch document
//gsoap turb2 service method-encoding:	GetVelocityBatch literal
//gsoap turb2 service method-action:	GetVelocityBatch http://turbulence.pha.jhu.edu/GetVelocityBatch
//gsoap turb2 service method-output-action:	GetVelocityBatch http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityBatchResponse
int __turb2__GetVelocityBatch(
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,	///< Request parameter
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetRawVelocity                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetRawVelocity" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Get a cube of the raw velocity data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawVelocity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVelocity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetRawVelocity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // response parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetRawVelocity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // response parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetRawVelocity document
//gsoap turb2 service method-encoding:	GetRawVelocity literal
//gsoap turb2 service method-action:	GetRawVelocity http://turbulence.pha.jhu.edu/GetRawVelocity
//gsoap turb2 service method-output-action:	GetRawVelocity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVelocityResponse
int __turb2__GetRawVelocity(
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,	///< Request parameter
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetPressure                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetPressure" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the pressure field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPressure"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressure"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // response parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetPressure(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // response parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetPressure document
//gsoap turb2 service method-encoding:	GetPressure literal
//gsoap turb2 service method-action:	GetPressure http://turbulence.pha.jhu.edu/GetPressure
//gsoap turb2 service method-output-action:	GetPressure http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureResponse
int __turb2__GetPressure(
    struct _turb1__GetPressure*         turb1__GetPressure,	///< Request parameter
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetRawPressure                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetRawPressure" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Get a cube of the raw pressure data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawPressure"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawPressure"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetRawPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // response parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetRawPressure(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // response parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetRawPressure document
//gsoap turb2 service method-encoding:	GetRawPressure literal
//gsoap turb2 service method-action:	GetRawPressure http://turbulence.pha.jhu.edu/GetRawPressure
//gsoap turb2 service method-output-action:	GetRawPressure http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawPressureResponse
int __turb2__GetRawPressure(
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,	///< Request parameter
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetMagneticField                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetMagneticField" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticField"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticField"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetMagneticField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // response parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetMagneticField(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // response parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetMagneticField document
//gsoap turb2 service method-encoding:	GetMagneticField literal
//gsoap turb2 service method-action:	GetMagneticField http://turbulence.pha.jhu.edu/GetMagneticField
//gsoap turb2 service method-output-action:	GetMagneticField http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldResponse
int __turb2__GetMagneticField(
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,	///< Request parameter
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetRawMagneticField                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetRawMagneticField" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Get a cube of the raw magnetic field data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawMagneticField"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawMagneticField"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetRawMagneticField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // response parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetRawMagneticField(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // response parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetRawMagneticField document
//gsoap turb2 service method-encoding:	GetRawMagneticField literal
//gsoap turb2 service method-action:	GetRawMagneticField http://turbulence.pha.jhu.edu/GetRawMagneticField
//gsoap turb2 service method-output-action:	GetRawMagneticField http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawMagneticFieldResponse
int __turb2__GetRawMagneticField(
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,	///< Request parameter
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVectorPotential                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVectorPotential" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotential"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotential"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVectorPotential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // response parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVectorPotential(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // response parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVectorPotential document
//gsoap turb2 service method-encoding:	GetVectorPotential literal
//gsoap turb2 service method-action:	GetVectorPotential http://turbulence.pha.jhu.edu/GetVectorPotential
//gsoap turb2 service method-output-action:	GetVectorPotential http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialResponse
int __turb2__GetVectorPotential(
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,	///< Request parameter
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetRawVectorPotential                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetRawVectorPotential" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Get a cube of the raw vector potential data with the given width cornered at the
specified coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawVectorPotential"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVectorPotential"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetRawVectorPotential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // response parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetRawVectorPotential(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // response parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetRawVectorPotential document
//gsoap turb2 service method-encoding:	GetRawVectorPotential literal
//gsoap turb2 service method-action:	GetRawVectorPotential http://turbulence.pha.jhu.edu/GetRawVectorPotential
//gsoap turb2 service method-output-action:	GetRawVectorPotential http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVectorPotentialResponse
int __turb2__GetRawVectorPotential(
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,	///< Request parameter
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetDensity                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetDensity" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the density field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetDensity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetDensity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // response parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetDensity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // response parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetDensity document
//gsoap turb2 service method-encoding:	GetDensity literal
//gsoap turb2 service method-action:	GetDensity http://turbulence.pha.jhu.edu/GetDensity
//gsoap turb2 service method-output-action:	GetDensity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityResponse
int __turb2__GetDensity(
    struct _turb1__GetDensity*          turb1__GetDensity,	///< Request parameter
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetDensityGradient                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetDensityGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the density gradient at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetDensityGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetDensityGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // response parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetDensityGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // response parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetDensityGradient document
//gsoap turb2 service method-encoding:	GetDensityGradient literal
//gsoap turb2 service method-action:	GetDensityGradient http://turbulence.pha.jhu.edu/GetDensityGradient
//gsoap turb2 service method-output-action:	GetDensityGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityGradientResponse
int __turb2__GetDensityGradient(
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,	///< Request parameter
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetDensityHessian                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetDensityHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the density hessian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetDensityHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetDensityHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // response parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetDensityHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // response parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetDensityHessian document
//gsoap turb2 service method-encoding:	GetDensityHessian literal
//gsoap turb2 service method-action:	GetDensityHessian http://turbulence.pha.jhu.edu/GetDensityHessian
//gsoap turb2 service method-output-action:	GetDensityHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityHessianResponse
int __turb2__GetDensityHessian(
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,	///< Request parameter
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetRawDensity                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetRawDensity" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Get a cube of the raw density data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawDensity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawDensity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetRawDensity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // response parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetRawDensity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // response parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetRawDensity document
//gsoap turb2 service method-encoding:	GetRawDensity literal
//gsoap turb2 service method-action:	GetRawDensity http://turbulence.pha.jhu.edu/GetRawDensity
//gsoap turb2 service method-output-action:	GetRawDensity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawDensityResponse
int __turb2__GetRawDensity(
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,	///< Request parameter
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetForce                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetForce" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the force for a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetForce"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetForce"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetForceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetForce(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // response parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetForce(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // response parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetForce document
//gsoap turb2 service method-encoding:	GetForce literal
//gsoap turb2 service method-action:	GetForce http://turbulence.pha.jhu.edu/GetForce
//gsoap turb2 service method-output-action:	GetForce http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetForceResponse
int __turb2__GetForce(
    struct _turb1__GetForce*            turb1__GetForce,	///< Request parameter
    struct _turb1__GetForceResponse*    turb1__GetForceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVelocityAndPressure                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVelocityAndPressure" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Spatially interpolate the velocity for an array of points

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressure"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityAndPressure"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityAndPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVelocityAndPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // response parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVelocityAndPressure(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // response parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVelocityAndPressure document
//gsoap turb2 service method-encoding:	GetVelocityAndPressure literal
//gsoap turb2 service method-action:	GetVelocityAndPressure http://turbulence.pha.jhu.edu/GetVelocityAndPressure
//gsoap turb2 service method-output-action:	GetVelocityAndPressure http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityAndPressureResponse
int __turb2__GetVelocityAndPressure(
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,	///< Request parameter
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVelocityGradient                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVelocityGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the velocity gradient at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVelocityGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // response parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVelocityGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // response parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVelocityGradient document
//gsoap turb2 service method-encoding:	GetVelocityGradient literal
//gsoap turb2 service method-action:	GetVelocityGradient http://turbulence.pha.jhu.edu/GetVelocityGradient
//gsoap turb2 service method-output-action:	GetVelocityGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityGradientResponse
int __turb2__GetVelocityGradient(
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,	///< Request parameter
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetMagneticFieldGradient                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetMagneticFieldGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the magnetic field gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetMagneticFieldGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // response parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetMagneticFieldGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // response parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetMagneticFieldGradient document
//gsoap turb2 service method-encoding:	GetMagneticFieldGradient literal
//gsoap turb2 service method-action:	GetMagneticFieldGradient http://turbulence.pha.jhu.edu/GetMagneticFieldGradient
//gsoap turb2 service method-output-action:	GetMagneticFieldGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldGradientResponse
int __turb2__GetMagneticFieldGradient(
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,	///< Request parameter
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVectorPotentialGradient                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVectorPotentialGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the vector potential gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVectorPotentialGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // response parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVectorPotentialGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // response parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVectorPotentialGradient document
//gsoap turb2 service method-encoding:	GetVectorPotentialGradient literal
//gsoap turb2 service method-action:	GetVectorPotentialGradient http://turbulence.pha.jhu.edu/GetVectorPotentialGradient
//gsoap turb2 service method-output-action:	GetVectorPotentialGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialGradientResponse
int __turb2__GetVectorPotentialGradient(
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,	///< Request parameter
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetPressureGradient                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetPressureGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the pressure gradient at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPressureGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetPressureGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // response parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetPressureGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // response parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetPressureGradient document
//gsoap turb2 service method-encoding:	GetPressureGradient literal
//gsoap turb2 service method-action:	GetPressureGradient http://turbulence.pha.jhu.edu/GetPressureGradient
//gsoap turb2 service method-output-action:	GetPressureGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureGradientResponse
int __turb2__GetPressureGradient(
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,	///< Request parameter
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetPressureHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetPressureHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the pressure hessian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPressureHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetPressureHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // response parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetPressureHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // response parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetPressureHessian document
//gsoap turb2 service method-encoding:	GetPressureHessian literal
//gsoap turb2 service method-action:	GetPressureHessian http://turbulence.pha.jhu.edu/GetPressureHessian
//gsoap turb2 service method-output-action:	GetPressureHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureHessianResponse
int __turb2__GetPressureHessian(
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,	///< Request parameter
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVelocityHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVelocityHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the velocity hessian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVelocityHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // response parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVelocityHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // response parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVelocityHessian document
//gsoap turb2 service method-encoding:	GetVelocityHessian literal
//gsoap turb2 service method-action:	GetVelocityHessian http://turbulence.pha.jhu.edu/GetVelocityHessian
//gsoap turb2 service method-output-action:	GetVelocityHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityHessianResponse
int __turb2__GetVelocityHessian(
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,	///< Request parameter
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetMagneticHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetMagneticHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the magnetic field hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetMagneticHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // response parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetMagneticHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // response parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetMagneticHessian document
//gsoap turb2 service method-encoding:	GetMagneticHessian literal
//gsoap turb2 service method-action:	GetMagneticHessian http://turbulence.pha.jhu.edu/GetMagneticHessian
//gsoap turb2 service method-output-action:	GetMagneticHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticHessianResponse
int __turb2__GetMagneticHessian(
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,	///< Request parameter
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVectorPotentialHessian                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVectorPotentialHessian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the vector potential hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVectorPotentialHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // response parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVectorPotentialHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // response parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVectorPotentialHessian document
//gsoap turb2 service method-encoding:	GetVectorPotentialHessian literal
//gsoap turb2 service method-action:	GetVectorPotentialHessian http://turbulence.pha.jhu.edu/GetVectorPotentialHessian
//gsoap turb2 service method-output-action:	GetVectorPotentialHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialHessianResponse
int __turb2__GetVectorPotentialHessian(
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,	///< Request parameter
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVelocityLaplacian                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVelocityLaplacian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the velocity laplacian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityLaplacian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVelocityLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // response parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVelocityLaplacian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // response parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVelocityLaplacian document
//gsoap turb2 service method-encoding:	GetVelocityLaplacian literal
//gsoap turb2 service method-action:	GetVelocityLaplacian http://turbulence.pha.jhu.edu/GetVelocityLaplacian
//gsoap turb2 service method-output-action:	GetVelocityLaplacian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityLaplacianResponse
int __turb2__GetVelocityLaplacian(
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,	///< Request parameter
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetMagneticFieldLaplacian                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetMagneticFieldLaplacian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the magnetic field Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldLaplacian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetMagneticFieldLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // response parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetMagneticFieldLaplacian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // response parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetMagneticFieldLaplacian document
//gsoap turb2 service method-encoding:	GetMagneticFieldLaplacian literal
//gsoap turb2 service method-action:	GetMagneticFieldLaplacian http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian
//gsoap turb2 service method-output-action:	GetMagneticFieldLaplacian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldLaplacianResponse
int __turb2__GetMagneticFieldLaplacian(
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,	///< Request parameter
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetVectorPotentialLaplacian                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetVectorPotentialLaplacian" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the vector potential Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialLaplacian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetVectorPotentialLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // response parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetVectorPotentialLaplacian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // response parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetVectorPotentialLaplacian document
//gsoap turb2 service method-encoding:	GetVectorPotentialLaplacian literal
//gsoap turb2 service method-action:	GetVectorPotentialLaplacian http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian
//gsoap turb2 service method-output-action:	GetVectorPotentialLaplacian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialLaplacianResponse
int __turb2__GetVectorPotentialLaplacian(
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,	///< Request parameter
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetPosition                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetPosition" of service binding "TurbulenceServiceSoap"

/**

Operation details:

FluidParticleTracking

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPosition"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPosition"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetPosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // response parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetPosition(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // response parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetPosition document
//gsoap turb2 service method-encoding:	GetPosition literal
//gsoap turb2 service method-action:	GetPosition http://turbulence.pha.jhu.edu/GetPosition
//gsoap turb2 service method-output-action:	GetPosition http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPositionResponse
int __turb2__GetPosition(
    struct _turb1__GetPosition*         turb1__GetPosition,	///< Request parameter
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetBoxFilter                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetBoxFilter" of service binding "TurbulenceServiceSoap"

/**

Operation details:

GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetBoxFilter"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilter"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetBoxFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // response parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetBoxFilter(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // response parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetBoxFilter document
//gsoap turb2 service method-encoding:	GetBoxFilter literal
//gsoap turb2 service method-action:	GetBoxFilter http://turbulence.pha.jhu.edu/GetBoxFilter
//gsoap turb2 service method-output-action:	GetBoxFilter http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterResponse
int __turb2__GetBoxFilter(
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,	///< Request parameter
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetBoxFilterSGS                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetBoxFilterSGS" of service binding "TurbulenceServiceSoap"

/**

Operation details:

SGSBoxFilter

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGS"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterSGS"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterSGSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetBoxFilterSGS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // response parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetBoxFilterSGS(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // response parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetBoxFilterSGS document
//gsoap turb2 service method-encoding:	GetBoxFilterSGS literal
//gsoap turb2 service method-action:	GetBoxFilterSGS http://turbulence.pha.jhu.edu/GetBoxFilterSGS
//gsoap turb2 service method-output-action:	GetBoxFilterSGS http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterSGSResponse
int __turb2__GetBoxFilterSGS(
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,	///< Request parameter
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetBoxFilterGradient                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetBoxFilterGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetBoxFilterGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // response parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetBoxFilterGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // response parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetBoxFilterGradient document
//gsoap turb2 service method-encoding:	GetBoxFilterGradient literal
//gsoap turb2 service method-action:	GetBoxFilterGradient http://turbulence.pha.jhu.edu/GetBoxFilterGradient
//gsoap turb2 service method-output-action:	GetBoxFilterGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterGradientResponse
int __turb2__GetBoxFilterGradient(
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,	///< Request parameter
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetThreshold                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetThreshold" of service binding "TurbulenceServiceSoap"

/**

Operation details:

GetThreshold of the specified field.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetThreshold"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetThreshold"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetThresholdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetThreshold(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // response parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetThreshold(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // response parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetThreshold document
//gsoap turb2 service method-encoding:	GetThreshold literal
//gsoap turb2 service method-action:	GetThreshold http://turbulence.pha.jhu.edu/GetThreshold
//gsoap turb2 service method-output-action:	GetThreshold http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetThresholdResponse
int __turb2__GetThreshold(
    struct _turb1__GetThreshold*        turb1__GetThreshold,	///< Request parameter
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb2__GetLaplacianOfGradient                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb2__GetLaplacianOfGradient" of service binding "TurbulenceServiceSoap"

/**

Operation details:

Retrieve the laplacian of the gradient of the specified field at a number of points
for a given time. Development version, not intended for production use!

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetLaplacianOfGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetLaplacianOfGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb2__GetLaplacianOfGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // response parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb2__GetLaplacianOfGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // response parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

*/

//gsoap turb2 service method-style:	GetLaplacianOfGradient document
//gsoap turb2 service method-encoding:	GetLaplacianOfGradient literal
//gsoap turb2 service method-action:	GetLaplacianOfGradient http://turbulence.pha.jhu.edu/GetLaplacianOfGradient
//gsoap turb2 service method-output-action:	GetLaplacianOfGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetLaplacianOfGradientResponse
int __turb2__GetLaplacianOfGradient(
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,	///< Request parameter
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   TurbulenceServiceSoap12                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__NullOp                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__NullOp" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Perform a null operation -- for testing throughput

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/NullOp"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/NullOp"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/NullOpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__NullOp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // response parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__NullOp(
    struct soap *soap,
    // request parameters:
    struct _turb1__NullOp*              turb1__NullOp,
    // response parameters:
    struct _turb1__NullOpResponse*      turb1__NullOpResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	NullOp document
//gsoap turb3 service method-encoding:	NullOp literal
//gsoap turb3 service method-action:	NullOp http://turbulence.pha.jhu.edu/NullOp
//gsoap turb3 service method-output-action:	NullOp http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/NullOpResponse
int __turb3__NullOp(
    struct _turb1__NullOp*              turb1__NullOp,	///< Request parameter
    struct _turb1__NullOpResponse*      turb1__NullOpResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVelocity                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVelocity" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the velocity at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVelocity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // response parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVelocity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocity*         turb1__GetVelocity,
    // response parameters:
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVelocity document
//gsoap turb3 service method-encoding:	GetVelocity literal
//gsoap turb3 service method-action:	GetVelocity http://turbulence.pha.jhu.edu/GetVelocity
//gsoap turb3 service method-output-action:	GetVelocity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityResponse
int __turb3__GetVelocity(
    struct _turb1__GetVelocity*         turb1__GetVelocity,	///< Request parameter
    struct _turb1__GetVelocityResponse* turb1__GetVelocityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVelocityBatch                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVelocityBatch" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the velocity at a number of points for a given time (allow
batching).

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityBatch"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityBatch"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityBatchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVelocityBatch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // response parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVelocityBatch(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,
    // response parameters:
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVelocityBatch document
//gsoap turb3 service method-encoding:	GetVelocityBatch literal
//gsoap turb3 service method-action:	GetVelocityBatch http://turbulence.pha.jhu.edu/GetVelocityBatch
//gsoap turb3 service method-output-action:	GetVelocityBatch http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityBatchResponse
int __turb3__GetVelocityBatch(
    struct _turb1__GetVelocityBatch*    turb1__GetVelocityBatch,	///< Request parameter
    struct _turb1__GetVelocityBatchResponse* turb1__GetVelocityBatchResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetRawVelocity                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetRawVelocity" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Get a cube of the raw velocity data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawVelocity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVelocity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVelocityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetRawVelocity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // response parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetRawVelocity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,
    // response parameters:
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetRawVelocity document
//gsoap turb3 service method-encoding:	GetRawVelocity literal
//gsoap turb3 service method-action:	GetRawVelocity http://turbulence.pha.jhu.edu/GetRawVelocity
//gsoap turb3 service method-output-action:	GetRawVelocity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVelocityResponse
int __turb3__GetRawVelocity(
    struct _turb1__GetRawVelocity*      turb1__GetRawVelocity,	///< Request parameter
    struct _turb1__GetRawVelocityResponse* turb1__GetRawVelocityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetPressure                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetPressure" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the pressure field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPressure"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressure"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // response parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetPressure(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPressure*         turb1__GetPressure,
    // response parameters:
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetPressure document
//gsoap turb3 service method-encoding:	GetPressure literal
//gsoap turb3 service method-action:	GetPressure http://turbulence.pha.jhu.edu/GetPressure
//gsoap turb3 service method-output-action:	GetPressure http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureResponse
int __turb3__GetPressure(
    struct _turb1__GetPressure*         turb1__GetPressure,	///< Request parameter
    struct _turb1__GetPressureResponse* turb1__GetPressureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetRawPressure                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetRawPressure" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Get a cube of the raw pressure data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawPressure"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawPressure"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetRawPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // response parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetRawPressure(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,
    // response parameters:
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetRawPressure document
//gsoap turb3 service method-encoding:	GetRawPressure literal
//gsoap turb3 service method-action:	GetRawPressure http://turbulence.pha.jhu.edu/GetRawPressure
//gsoap turb3 service method-output-action:	GetRawPressure http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawPressureResponse
int __turb3__GetRawPressure(
    struct _turb1__GetRawPressure*      turb1__GetRawPressure,	///< Request parameter
    struct _turb1__GetRawPressureResponse* turb1__GetRawPressureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetMagneticField                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetMagneticField" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticField"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticField"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetMagneticField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // response parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetMagneticField(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,
    // response parameters:
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetMagneticField document
//gsoap turb3 service method-encoding:	GetMagneticField literal
//gsoap turb3 service method-action:	GetMagneticField http://turbulence.pha.jhu.edu/GetMagneticField
//gsoap turb3 service method-output-action:	GetMagneticField http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldResponse
int __turb3__GetMagneticField(
    struct _turb1__GetMagneticField*    turb1__GetMagneticField,	///< Request parameter
    struct _turb1__GetMagneticFieldResponse* turb1__GetMagneticFieldResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetRawMagneticField                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetRawMagneticField" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Get a cube of the raw magnetic field data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawMagneticField"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawMagneticField"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawMagneticFieldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetRawMagneticField(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // response parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetRawMagneticField(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,
    // response parameters:
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetRawMagneticField document
//gsoap turb3 service method-encoding:	GetRawMagneticField literal
//gsoap turb3 service method-action:	GetRawMagneticField http://turbulence.pha.jhu.edu/GetRawMagneticField
//gsoap turb3 service method-output-action:	GetRawMagneticField http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawMagneticFieldResponse
int __turb3__GetRawMagneticField(
    struct _turb1__GetRawMagneticField* turb1__GetRawMagneticField,	///< Request parameter
    struct _turb1__GetRawMagneticFieldResponse* turb1__GetRawMagneticFieldResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVectorPotential                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVectorPotential" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the magnetic field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotential"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotential"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVectorPotential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // response parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVectorPotential(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,
    // response parameters:
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVectorPotential document
//gsoap turb3 service method-encoding:	GetVectorPotential literal
//gsoap turb3 service method-action:	GetVectorPotential http://turbulence.pha.jhu.edu/GetVectorPotential
//gsoap turb3 service method-output-action:	GetVectorPotential http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialResponse
int __turb3__GetVectorPotential(
    struct _turb1__GetVectorPotential*  turb1__GetVectorPotential,	///< Request parameter
    struct _turb1__GetVectorPotentialResponse* turb1__GetVectorPotentialResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetRawVectorPotential                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetRawVectorPotential" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Get a cube of the raw vector potential data with the given width cornered at the
specified coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawVectorPotential"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVectorPotential"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVectorPotentialResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetRawVectorPotential(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // response parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetRawVectorPotential(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,
    // response parameters:
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetRawVectorPotential document
//gsoap turb3 service method-encoding:	GetRawVectorPotential literal
//gsoap turb3 service method-action:	GetRawVectorPotential http://turbulence.pha.jhu.edu/GetRawVectorPotential
//gsoap turb3 service method-output-action:	GetRawVectorPotential http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawVectorPotentialResponse
int __turb3__GetRawVectorPotential(
    struct _turb1__GetRawVectorPotential* turb1__GetRawVectorPotential,	///< Request parameter
    struct _turb1__GetRawVectorPotentialResponse* turb1__GetRawVectorPotentialResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetDensity                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetDensity" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the density field at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetDensity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetDensity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // response parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetDensity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetDensity*          turb1__GetDensity,
    // response parameters:
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetDensity document
//gsoap turb3 service method-encoding:	GetDensity literal
//gsoap turb3 service method-action:	GetDensity http://turbulence.pha.jhu.edu/GetDensity
//gsoap turb3 service method-output-action:	GetDensity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityResponse
int __turb3__GetDensity(
    struct _turb1__GetDensity*          turb1__GetDensity,	///< Request parameter
    struct _turb1__GetDensityResponse*  turb1__GetDensityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetDensityGradient                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetDensityGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the density gradient at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetDensityGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetDensityGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // response parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetDensityGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,
    // response parameters:
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetDensityGradient document
//gsoap turb3 service method-encoding:	GetDensityGradient literal
//gsoap turb3 service method-action:	GetDensityGradient http://turbulence.pha.jhu.edu/GetDensityGradient
//gsoap turb3 service method-output-action:	GetDensityGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityGradientResponse
int __turb3__GetDensityGradient(
    struct _turb1__GetDensityGradient*  turb1__GetDensityGradient,	///< Request parameter
    struct _turb1__GetDensityGradientResponse* turb1__GetDensityGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetDensityHessian                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetDensityHessian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the density hessian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetDensityHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetDensityHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // response parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetDensityHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,
    // response parameters:
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetDensityHessian document
//gsoap turb3 service method-encoding:	GetDensityHessian literal
//gsoap turb3 service method-action:	GetDensityHessian http://turbulence.pha.jhu.edu/GetDensityHessian
//gsoap turb3 service method-output-action:	GetDensityHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetDensityHessianResponse
int __turb3__GetDensityHessian(
    struct _turb1__GetDensityHessian*   turb1__GetDensityHessian,	///< Request parameter
    struct _turb1__GetDensityHessianResponse* turb1__GetDensityHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetRawDensity                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetRawDensity" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Get a cube of the raw density data with the given width cornered at the specified
coordinates for the given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetRawDensity"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawDensity"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawDensityResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetRawDensity(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // response parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetRawDensity(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,
    // response parameters:
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetRawDensity document
//gsoap turb3 service method-encoding:	GetRawDensity literal
//gsoap turb3 service method-action:	GetRawDensity http://turbulence.pha.jhu.edu/GetRawDensity
//gsoap turb3 service method-output-action:	GetRawDensity http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetRawDensityResponse
int __turb3__GetRawDensity(
    struct _turb1__GetRawDensity*       turb1__GetRawDensity,	///< Request parameter
    struct _turb1__GetRawDensityResponse* turb1__GetRawDensityResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetForce                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetForce" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the force for a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetForce"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetForce"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetForceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetForce(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // response parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetForce(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetForce*            turb1__GetForce,
    // response parameters:
    struct _turb1__GetForceResponse*    turb1__GetForceResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetForce document
//gsoap turb3 service method-encoding:	GetForce literal
//gsoap turb3 service method-action:	GetForce http://turbulence.pha.jhu.edu/GetForce
//gsoap turb3 service method-output-action:	GetForce http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetForceResponse
int __turb3__GetForce(
    struct _turb1__GetForce*            turb1__GetForce,	///< Request parameter
    struct _turb1__GetForceResponse*    turb1__GetForceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVelocityAndPressure                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVelocityAndPressure" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Spatially interpolate the velocity for an array of points

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityAndPressure"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityAndPressure"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityAndPressureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVelocityAndPressure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // response parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVelocityAndPressure(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,
    // response parameters:
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVelocityAndPressure document
//gsoap turb3 service method-encoding:	GetVelocityAndPressure literal
//gsoap turb3 service method-action:	GetVelocityAndPressure http://turbulence.pha.jhu.edu/GetVelocityAndPressure
//gsoap turb3 service method-output-action:	GetVelocityAndPressure http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityAndPressureResponse
int __turb3__GetVelocityAndPressure(
    struct _turb1__GetVelocityAndPressure* turb1__GetVelocityAndPressure,	///< Request parameter
    struct _turb1__GetVelocityAndPressureResponse* turb1__GetVelocityAndPressureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVelocityGradient                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVelocityGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the velocity gradient at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVelocityGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // response parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVelocityGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,
    // response parameters:
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVelocityGradient document
//gsoap turb3 service method-encoding:	GetVelocityGradient literal
//gsoap turb3 service method-action:	GetVelocityGradient http://turbulence.pha.jhu.edu/GetVelocityGradient
//gsoap turb3 service method-output-action:	GetVelocityGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityGradientResponse
int __turb3__GetVelocityGradient(
    struct _turb1__GetVelocityGradient* turb1__GetVelocityGradient,	///< Request parameter
    struct _turb1__GetVelocityGradientResponse* turb1__GetVelocityGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetMagneticFieldGradient                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetMagneticFieldGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the magnetic field gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticFieldGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetMagneticFieldGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // response parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetMagneticFieldGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,
    // response parameters:
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetMagneticFieldGradient document
//gsoap turb3 service method-encoding:	GetMagneticFieldGradient literal
//gsoap turb3 service method-action:	GetMagneticFieldGradient http://turbulence.pha.jhu.edu/GetMagneticFieldGradient
//gsoap turb3 service method-output-action:	GetMagneticFieldGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldGradientResponse
int __turb3__GetMagneticFieldGradient(
    struct _turb1__GetMagneticFieldGradient* turb1__GetMagneticFieldGradient,	///< Request parameter
    struct _turb1__GetMagneticFieldGradientResponse* turb1__GetMagneticFieldGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVectorPotentialGradient                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVectorPotentialGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the vector potential gradient at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotentialGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVectorPotentialGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // response parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVectorPotentialGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,
    // response parameters:
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVectorPotentialGradient document
//gsoap turb3 service method-encoding:	GetVectorPotentialGradient literal
//gsoap turb3 service method-action:	GetVectorPotentialGradient http://turbulence.pha.jhu.edu/GetVectorPotentialGradient
//gsoap turb3 service method-output-action:	GetVectorPotentialGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialGradientResponse
int __turb3__GetVectorPotentialGradient(
    struct _turb1__GetVectorPotentialGradient* turb1__GetVectorPotentialGradient,	///< Request parameter
    struct _turb1__GetVectorPotentialGradientResponse* turb1__GetVectorPotentialGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetPressureGradient                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetPressureGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the pressure gradient at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPressureGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetPressureGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // response parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetPressureGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,
    // response parameters:
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetPressureGradient document
//gsoap turb3 service method-encoding:	GetPressureGradient literal
//gsoap turb3 service method-action:	GetPressureGradient http://turbulence.pha.jhu.edu/GetPressureGradient
//gsoap turb3 service method-output-action:	GetPressureGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureGradientResponse
int __turb3__GetPressureGradient(
    struct _turb1__GetPressureGradient* turb1__GetPressureGradient,	///< Request parameter
    struct _turb1__GetPressureGradientResponse* turb1__GetPressureGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetPressureHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetPressureHessian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the pressure hessian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPressureHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetPressureHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // response parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetPressureHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,
    // response parameters:
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetPressureHessian document
//gsoap turb3 service method-encoding:	GetPressureHessian literal
//gsoap turb3 service method-action:	GetPressureHessian http://turbulence.pha.jhu.edu/GetPressureHessian
//gsoap turb3 service method-output-action:	GetPressureHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPressureHessianResponse
int __turb3__GetPressureHessian(
    struct _turb1__GetPressureHessian*  turb1__GetPressureHessian,	///< Request parameter
    struct _turb1__GetPressureHessianResponse* turb1__GetPressureHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVelocityHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVelocityHessian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the velocity hessian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVelocityHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // response parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVelocityHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,
    // response parameters:
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVelocityHessian document
//gsoap turb3 service method-encoding:	GetVelocityHessian literal
//gsoap turb3 service method-action:	GetVelocityHessian http://turbulence.pha.jhu.edu/GetVelocityHessian
//gsoap turb3 service method-output-action:	GetVelocityHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityHessianResponse
int __turb3__GetVelocityHessian(
    struct _turb1__GetVelocityHessian*  turb1__GetVelocityHessian,	///< Request parameter
    struct _turb1__GetVelocityHessianResponse* turb1__GetVelocityHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetMagneticHessian                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetMagneticHessian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the magnetic field hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetMagneticHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // response parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetMagneticHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,
    // response parameters:
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetMagneticHessian document
//gsoap turb3 service method-encoding:	GetMagneticHessian literal
//gsoap turb3 service method-action:	GetMagneticHessian http://turbulence.pha.jhu.edu/GetMagneticHessian
//gsoap turb3 service method-output-action:	GetMagneticHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticHessianResponse
int __turb3__GetMagneticHessian(
    struct _turb1__GetMagneticHessian*  turb1__GetMagneticHessian,	///< Request parameter
    struct _turb1__GetMagneticHessianResponse* turb1__GetMagneticHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVectorPotentialHessian                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVectorPotentialHessian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the vector potential hessian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotentialHessian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialHessian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialHessianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVectorPotentialHessian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // response parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVectorPotentialHessian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,
    // response parameters:
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVectorPotentialHessian document
//gsoap turb3 service method-encoding:	GetVectorPotentialHessian literal
//gsoap turb3 service method-action:	GetVectorPotentialHessian http://turbulence.pha.jhu.edu/GetVectorPotentialHessian
//gsoap turb3 service method-output-action:	GetVectorPotentialHessian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialHessianResponse
int __turb3__GetVectorPotentialHessian(
    struct _turb1__GetVectorPotentialHessian* turb1__GetVectorPotentialHessian,	///< Request parameter
    struct _turb1__GetVectorPotentialHessianResponse* turb1__GetVectorPotentialHessianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVelocityLaplacian                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVelocityLaplacian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the velocity laplacian at a fixed location

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVelocityLaplacian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityLaplacian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVelocityLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // response parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVelocityLaplacian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,
    // response parameters:
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVelocityLaplacian document
//gsoap turb3 service method-encoding:	GetVelocityLaplacian literal
//gsoap turb3 service method-action:	GetVelocityLaplacian http://turbulence.pha.jhu.edu/GetVelocityLaplacian
//gsoap turb3 service method-output-action:	GetVelocityLaplacian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVelocityLaplacianResponse
int __turb3__GetVelocityLaplacian(
    struct _turb1__GetVelocityLaplacian* turb1__GetVelocityLaplacian,	///< Request parameter
    struct _turb1__GetVelocityLaplacianResponse* turb1__GetVelocityLaplacianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetMagneticFieldLaplacian                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetMagneticFieldLaplacian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the magnetic field Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldLaplacian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetMagneticFieldLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // response parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetMagneticFieldLaplacian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,
    // response parameters:
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetMagneticFieldLaplacian document
//gsoap turb3 service method-encoding:	GetMagneticFieldLaplacian literal
//gsoap turb3 service method-action:	GetMagneticFieldLaplacian http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian
//gsoap turb3 service method-output-action:	GetMagneticFieldLaplacian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetMagneticFieldLaplacianResponse
int __turb3__GetMagneticFieldLaplacian(
    struct _turb1__GetMagneticFieldLaplacian* turb1__GetMagneticFieldLaplacian,	///< Request parameter
    struct _turb1__GetMagneticFieldLaplacianResponse* turb1__GetMagneticFieldLaplacianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetVectorPotentialLaplacian                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetVectorPotentialLaplacian" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the vector potential Laplacian at a number of points for a given time.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialLaplacian"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialLaplacianResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetVectorPotentialLaplacian(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // response parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetVectorPotentialLaplacian(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,
    // response parameters:
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetVectorPotentialLaplacian document
//gsoap turb3 service method-encoding:	GetVectorPotentialLaplacian literal
//gsoap turb3 service method-action:	GetVectorPotentialLaplacian http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian
//gsoap turb3 service method-output-action:	GetVectorPotentialLaplacian http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetVectorPotentialLaplacianResponse
int __turb3__GetVectorPotentialLaplacian(
    struct _turb1__GetVectorPotentialLaplacian* turb1__GetVectorPotentialLaplacian,	///< Request parameter
    struct _turb1__GetVectorPotentialLaplacianResponse* turb1__GetVectorPotentialLaplacianResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetPosition                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetPosition" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

FluidParticleTracking

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetPosition"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPosition"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetPosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // response parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetPosition(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetPosition*         turb1__GetPosition,
    // response parameters:
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetPosition document
//gsoap turb3 service method-encoding:	GetPosition literal
//gsoap turb3 service method-action:	GetPosition http://turbulence.pha.jhu.edu/GetPosition
//gsoap turb3 service method-output-action:	GetPosition http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetPositionResponse
int __turb3__GetPosition(
    struct _turb1__GetPosition*         turb1__GetPosition,	///< Request parameter
    struct _turb1__GetPositionResponse* turb1__GetPositionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetBoxFilter                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetBoxFilter" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetBoxFilter"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilter"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetBoxFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // response parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetBoxFilter(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,
    // response parameters:
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetBoxFilter document
//gsoap turb3 service method-encoding:	GetBoxFilter literal
//gsoap turb3 service method-action:	GetBoxFilter http://turbulence.pha.jhu.edu/GetBoxFilter
//gsoap turb3 service method-output-action:	GetBoxFilter http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterResponse
int __turb3__GetBoxFilter(
    struct _turb1__GetBoxFilter*        turb1__GetBoxFilter,	///< Request parameter
    struct _turb1__GetBoxFilterResponse* turb1__GetBoxFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetBoxFilterSGS                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetBoxFilterSGS" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

SGSBoxFilter

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetBoxFilterSGS"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterSGS"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterSGSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetBoxFilterSGS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // response parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetBoxFilterSGS(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,
    // response parameters:
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetBoxFilterSGS document
//gsoap turb3 service method-encoding:	GetBoxFilterSGS literal
//gsoap turb3 service method-action:	GetBoxFilterSGS http://turbulence.pha.jhu.edu/GetBoxFilterSGS
//gsoap turb3 service method-output-action:	GetBoxFilterSGS http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterSGSResponse
int __turb3__GetBoxFilterSGS(
    struct _turb1__GetBoxFilterSGS*     turb1__GetBoxFilterSGS,	///< Request parameter
    struct _turb1__GetBoxFilterSGSResponse* turb1__GetBoxFilterSGSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetBoxFilterGradient                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetBoxFilterGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

GetBoxFilter of the specified field; uses workload density to decide how to evaluate.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetBoxFilterGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetBoxFilterGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // response parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetBoxFilterGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,
    // response parameters:
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetBoxFilterGradient document
//gsoap turb3 service method-encoding:	GetBoxFilterGradient literal
//gsoap turb3 service method-action:	GetBoxFilterGradient http://turbulence.pha.jhu.edu/GetBoxFilterGradient
//gsoap turb3 service method-output-action:	GetBoxFilterGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetBoxFilterGradientResponse
int __turb3__GetBoxFilterGradient(
    struct _turb1__GetBoxFilterGradient* turb1__GetBoxFilterGradient,	///< Request parameter
    struct _turb1__GetBoxFilterGradientResponse* turb1__GetBoxFilterGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetThreshold                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetThreshold" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

GetThreshold of the specified field.

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetThreshold"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetThreshold"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetThresholdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetThreshold(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // response parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetThreshold(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetThreshold*        turb1__GetThreshold,
    // response parameters:
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetThreshold document
//gsoap turb3 service method-encoding:	GetThreshold literal
//gsoap turb3 service method-action:	GetThreshold http://turbulence.pha.jhu.edu/GetThreshold
//gsoap turb3 service method-output-action:	GetThreshold http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetThresholdResponse
int __turb3__GetThreshold(
    struct _turb1__GetThreshold*        turb1__GetThreshold,	///< Request parameter
    struct _turb1__GetThresholdResponse* turb1__GetThresholdResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __turb3__GetLaplacianOfGradient                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__turb3__GetLaplacianOfGradient" of service binding "TurbulenceServiceSoap12"

/**

Operation details:

Retrieve the laplacian of the gradient of the specified field at a number of points
for a given time. Development version, not intended for production use!

  - SOAP document/literal style messaging

  - SOAP action: "http://turbulence.pha.jhu.edu/GetLaplacianOfGradient"

  - Addressing action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetLaplacianOfGradient"

  - Addressing response action: "http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetLaplacianOfGradientResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___turb3__GetLaplacianOfGradient(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // response parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __turb3__GetLaplacianOfGradient(
    struct soap *soap,
    // request parameters:
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,
    // response parameters:
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse
  );
@endcode

*/

//gsoap turb3 service method-style:	GetLaplacianOfGradient document
//gsoap turb3 service method-encoding:	GetLaplacianOfGradient literal
//gsoap turb3 service method-action:	GetLaplacianOfGradient http://turbulence.pha.jhu.edu/GetLaplacianOfGradient
//gsoap turb3 service method-output-action:	GetLaplacianOfGradient http://turbulence.pha.jhu.edu//TurbulenceServiceSoap/GetLaplacianOfGradientResponse
int __turb3__GetLaplacianOfGradient(
    struct _turb1__GetLaplacianOfGradient* turb1__GetLaplacianOfGradient,	///< Request parameter
    struct _turb1__GetLaplacianOfGradientResponse* turb1__GetLaplacianOfGradientResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section turb1 Top-level root elements of schema "http://turbulence.pha.jhu.edu/"

  - <turb1:NullOp> @ref _turb1__NullOp
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__NullOp(struct soap*, struct _turb1__NullOp*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__NullOp(struct soap*, struct _turb1__NullOp*);
    @endcode

  - <turb1:NullOpResponse> @ref _turb1__NullOpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__NullOpResponse(struct soap*, struct _turb1__NullOpResponse*);
    @endcode

  - <turb1:GetVelocity> @ref _turb1__GetVelocity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocity(struct soap*, struct _turb1__GetVelocity*);
    @endcode

  - <turb1:GetVelocityResponse> @ref _turb1__GetVelocityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityResponse(struct soap*, struct _turb1__GetVelocityResponse*);
    @endcode

  - <turb1:GetVelocityBatch> @ref _turb1__GetVelocityBatch
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityBatch(struct soap*, struct _turb1__GetVelocityBatch*);
    @endcode

  - <turb1:GetVelocityBatchResponse> @ref _turb1__GetVelocityBatchResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityBatchResponse(struct soap*, struct _turb1__GetVelocityBatchResponse*);
    @endcode

  - <turb1:GetRawVelocity> @ref _turb1__GetRawVelocity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVelocity(struct soap*, struct _turb1__GetRawVelocity*);
    @endcode

  - <turb1:GetRawVelocityResponse> @ref _turb1__GetRawVelocityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVelocityResponse(struct soap*, struct _turb1__GetRawVelocityResponse*);
    @endcode

  - <turb1:GetPressure> @ref _turb1__GetPressure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressure(struct soap*, struct _turb1__GetPressure*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressure(struct soap*, struct _turb1__GetPressure*);
    @endcode

  - <turb1:GetPressureResponse> @ref _turb1__GetPressureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureResponse(struct soap*, struct _turb1__GetPressureResponse*);
    @endcode

  - <turb1:GetRawPressure> @ref _turb1__GetRawPressure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawPressure(struct soap*, struct _turb1__GetRawPressure*);
    @endcode

  - <turb1:GetRawPressureResponse> @ref _turb1__GetRawPressureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawPressureResponse(struct soap*, struct _turb1__GetRawPressureResponse*);
    @endcode

  - <turb1:GetMagneticField> @ref _turb1__GetMagneticField
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticField(struct soap*, struct _turb1__GetMagneticField*);
    @endcode

  - <turb1:GetMagneticFieldResponse> @ref _turb1__GetMagneticFieldResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldResponse(struct soap*, struct _turb1__GetMagneticFieldResponse*);
    @endcode

  - <turb1:GetRawMagneticField> @ref _turb1__GetRawMagneticField
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawMagneticField(struct soap*, struct _turb1__GetRawMagneticField*);
    @endcode

  - <turb1:GetRawMagneticFieldResponse> @ref _turb1__GetRawMagneticFieldResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawMagneticFieldResponse(struct soap*, struct _turb1__GetRawMagneticFieldResponse*);
    @endcode

  - <turb1:GetVectorPotential> @ref _turb1__GetVectorPotential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotential(struct soap*, struct _turb1__GetVectorPotential*);
    @endcode

  - <turb1:GetVectorPotentialResponse> @ref _turb1__GetVectorPotentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialResponse(struct soap*, struct _turb1__GetVectorPotentialResponse*);
    @endcode

  - <turb1:GetRawVectorPotential> @ref _turb1__GetRawVectorPotential
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVectorPotential(struct soap*, struct _turb1__GetRawVectorPotential*);
    @endcode

  - <turb1:GetRawVectorPotentialResponse> @ref _turb1__GetRawVectorPotentialResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawVectorPotentialResponse(struct soap*, struct _turb1__GetRawVectorPotentialResponse*);
    @endcode

  - <turb1:GetDensity> @ref _turb1__GetDensity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensity(struct soap*, struct _turb1__GetDensity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensity(struct soap*, struct _turb1__GetDensity*);
    @endcode

  - <turb1:GetDensityResponse> @ref _turb1__GetDensityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityResponse(struct soap*, struct _turb1__GetDensityResponse*);
    @endcode

  - <turb1:GetDensityGradient> @ref _turb1__GetDensityGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityGradient(struct soap*, struct _turb1__GetDensityGradient*);
    @endcode

  - <turb1:GetDensityGradientResponse> @ref _turb1__GetDensityGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityGradientResponse(struct soap*, struct _turb1__GetDensityGradientResponse*);
    @endcode

  - <turb1:GetDensityHessian> @ref _turb1__GetDensityHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityHessian(struct soap*, struct _turb1__GetDensityHessian*);
    @endcode

  - <turb1:GetDensityHessianResponse> @ref _turb1__GetDensityHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetDensityHessianResponse(struct soap*, struct _turb1__GetDensityHessianResponse*);
    @endcode

  - <turb1:GetRawDensity> @ref _turb1__GetRawDensity
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawDensity(struct soap*, struct _turb1__GetRawDensity*);
    @endcode

  - <turb1:GetRawDensityResponse> @ref _turb1__GetRawDensityResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetRawDensityResponse(struct soap*, struct _turb1__GetRawDensityResponse*);
    @endcode

  - <turb1:GetForce> @ref _turb1__GetForce
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetForce(struct soap*, struct _turb1__GetForce*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetForce(struct soap*, struct _turb1__GetForce*);
    @endcode

  - <turb1:GetForceResponse> @ref _turb1__GetForceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetForceResponse(struct soap*, struct _turb1__GetForceResponse*);
    @endcode

  - <turb1:GetVelocityAndPressure> @ref _turb1__GetVelocityAndPressure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityAndPressure(struct soap*, struct _turb1__GetVelocityAndPressure*);
    @endcode

  - <turb1:GetVelocityAndPressureResponse> @ref _turb1__GetVelocityAndPressureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityAndPressureResponse(struct soap*, struct _turb1__GetVelocityAndPressureResponse*);
    @endcode

  - <turb1:GetVelocityGradient> @ref _turb1__GetVelocityGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityGradient(struct soap*, struct _turb1__GetVelocityGradient*);
    @endcode

  - <turb1:GetVelocityGradientResponse> @ref _turb1__GetVelocityGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityGradientResponse(struct soap*, struct _turb1__GetVelocityGradientResponse*);
    @endcode

  - <turb1:GetMagneticFieldGradient> @ref _turb1__GetMagneticFieldGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldGradient(struct soap*, struct _turb1__GetMagneticFieldGradient*);
    @endcode

  - <turb1:GetMagneticFieldGradientResponse> @ref _turb1__GetMagneticFieldGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldGradientResponse(struct soap*, struct _turb1__GetMagneticFieldGradientResponse*);
    @endcode

  - <turb1:GetVectorPotentialGradient> @ref _turb1__GetVectorPotentialGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialGradient(struct soap*, struct _turb1__GetVectorPotentialGradient*);
    @endcode

  - <turb1:GetVectorPotentialGradientResponse> @ref _turb1__GetVectorPotentialGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialGradientResponse(struct soap*, struct _turb1__GetVectorPotentialGradientResponse*);
    @endcode

  - <turb1:GetPressureGradient> @ref _turb1__GetPressureGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureGradient(struct soap*, struct _turb1__GetPressureGradient*);
    @endcode

  - <turb1:GetPressureGradientResponse> @ref _turb1__GetPressureGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureGradientResponse(struct soap*, struct _turb1__GetPressureGradientResponse*);
    @endcode

  - <turb1:GetPressureHessian> @ref _turb1__GetPressureHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureHessian(struct soap*, struct _turb1__GetPressureHessian*);
    @endcode

  - <turb1:GetPressureHessianResponse> @ref _turb1__GetPressureHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPressureHessianResponse(struct soap*, struct _turb1__GetPressureHessianResponse*);
    @endcode

  - <turb1:GetVelocityHessian> @ref _turb1__GetVelocityHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityHessian(struct soap*, struct _turb1__GetVelocityHessian*);
    @endcode

  - <turb1:GetVelocityHessianResponse> @ref _turb1__GetVelocityHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityHessianResponse(struct soap*, struct _turb1__GetVelocityHessianResponse*);
    @endcode

  - <turb1:GetMagneticHessian> @ref _turb1__GetMagneticHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticHessian(struct soap*, struct _turb1__GetMagneticHessian*);
    @endcode

  - <turb1:GetMagneticHessianResponse> @ref _turb1__GetMagneticHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticHessianResponse(struct soap*, struct _turb1__GetMagneticHessianResponse*);
    @endcode

  - <turb1:GetVectorPotentialHessian> @ref _turb1__GetVectorPotentialHessian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialHessian(struct soap*, struct _turb1__GetVectorPotentialHessian*);
    @endcode

  - <turb1:GetVectorPotentialHessianResponse> @ref _turb1__GetVectorPotentialHessianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialHessianResponse(struct soap*, struct _turb1__GetVectorPotentialHessianResponse*);
    @endcode

  - <turb1:GetVelocityLaplacian> @ref _turb1__GetVelocityLaplacian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityLaplacian(struct soap*, struct _turb1__GetVelocityLaplacian*);
    @endcode

  - <turb1:GetVelocityLaplacianResponse> @ref _turb1__GetVelocityLaplacianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVelocityLaplacianResponse(struct soap*, struct _turb1__GetVelocityLaplacianResponse*);
    @endcode

  - <turb1:GetMagneticFieldLaplacian> @ref _turb1__GetMagneticFieldLaplacian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldLaplacian(struct soap*, struct _turb1__GetMagneticFieldLaplacian*);
    @endcode

  - <turb1:GetMagneticFieldLaplacianResponse> @ref _turb1__GetMagneticFieldLaplacianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetMagneticFieldLaplacianResponse(struct soap*, struct _turb1__GetMagneticFieldLaplacianResponse*);
    @endcode

  - <turb1:GetVectorPotentialLaplacian> @ref _turb1__GetVectorPotentialLaplacian
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialLaplacian(struct soap*, struct _turb1__GetVectorPotentialLaplacian*);
    @endcode

  - <turb1:GetVectorPotentialLaplacianResponse> @ref _turb1__GetVectorPotentialLaplacianResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetVectorPotentialLaplacianResponse(struct soap*, struct _turb1__GetVectorPotentialLaplacianResponse*);
    @endcode

  - <turb1:GetPosition> @ref _turb1__GetPosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPosition(struct soap*, struct _turb1__GetPosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPosition(struct soap*, struct _turb1__GetPosition*);
    @endcode

  - <turb1:GetPositionResponse> @ref _turb1__GetPositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetPositionResponse(struct soap*, struct _turb1__GetPositionResponse*);
    @endcode

  - <turb1:GetBoxFilter> @ref _turb1__GetBoxFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilter(struct soap*, struct _turb1__GetBoxFilter*);
    @endcode

  - <turb1:GetBoxFilterResponse> @ref _turb1__GetBoxFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterResponse(struct soap*, struct _turb1__GetBoxFilterResponse*);
    @endcode

  - <turb1:GetBoxFilterSGS> @ref _turb1__GetBoxFilterSGS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGS(struct soap*, struct _turb1__GetBoxFilterSGS*);
    @endcode

  - <turb1:GetBoxFilterSGSResponse> @ref _turb1__GetBoxFilterSGSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterSGSResponse(struct soap*, struct _turb1__GetBoxFilterSGSResponse*);
    @endcode

  - <turb1:GetBoxFilterGradient> @ref _turb1__GetBoxFilterGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterGradient(struct soap*, struct _turb1__GetBoxFilterGradient*);
    @endcode

  - <turb1:GetBoxFilterGradientResponse> @ref _turb1__GetBoxFilterGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetBoxFilterGradientResponse(struct soap*, struct _turb1__GetBoxFilterGradientResponse*);
    @endcode

  - <turb1:GetThreshold> @ref _turb1__GetThreshold
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetThreshold(struct soap*, struct _turb1__GetThreshold*);
    @endcode

  - <turb1:GetThresholdResponse> @ref _turb1__GetThresholdResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetThresholdResponse(struct soap*, struct _turb1__GetThresholdResponse*);
    @endcode

  - <turb1:GetLaplacianOfGradient> @ref _turb1__GetLaplacianOfGradient
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetLaplacianOfGradient(struct soap*, struct _turb1__GetLaplacianOfGradient*);
    @endcode

  - <turb1:GetLaplacianOfGradientResponse> @ref _turb1__GetLaplacianOfGradientResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__turb1__GetLaplacianOfGradientResponse(struct soap*, struct _turb1__GetLaplacianOfGradientResponse*);
    @endcode

*/

/* End of TurbulenceService.h */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Website.edu.jhu.pha.turbulence {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TurbulenceServiceSoap", Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class TurbulenceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NullOpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawVelocityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawPressureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMagneticFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawMagneticFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVectorPotentialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawVectorPotentialOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDensityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDensityGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDensityHessianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawDensityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityAndPressureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMagneticFieldGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVectorPotentialGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressureGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressureHessianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityHessianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMagneticHessianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVectorPotentialHessianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityLaplacianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMagneticFieldLaplacianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVectorPotentialLaplacianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterSGSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterSGSsymtensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterSGStensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterSGSvectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterSGSscalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxFilterGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThresholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLaplacianOfGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemperatureGradientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemperatureHessianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVelocityAndTemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvariantOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TurbulenceService() {
            this.Url = global::Website.Properties.Settings.Default.Website_edu_jhu_pha_turbulence_TurbulenceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NullOpCompletedEventHandler NullOpCompleted;
        
        /// <remarks/>
        public event GetVelocityCompletedEventHandler GetVelocityCompleted;
        
        /// <remarks/>
        public event GetVelocityBatchCompletedEventHandler GetVelocityBatchCompleted;
        
        /// <remarks/>
        public event GetRawVelocityCompletedEventHandler GetRawVelocityCompleted;
        
        /// <remarks/>
        public event GetPressureCompletedEventHandler GetPressureCompleted;
        
        /// <remarks/>
        public event GetRawPressureCompletedEventHandler GetRawPressureCompleted;
        
        /// <remarks/>
        public event GetMagneticFieldCompletedEventHandler GetMagneticFieldCompleted;
        
        /// <remarks/>
        public event GetRawMagneticFieldCompletedEventHandler GetRawMagneticFieldCompleted;
        
        /// <remarks/>
        public event GetVectorPotentialCompletedEventHandler GetVectorPotentialCompleted;
        
        /// <remarks/>
        public event GetRawVectorPotentialCompletedEventHandler GetRawVectorPotentialCompleted;
        
        /// <remarks/>
        public event GetDensityCompletedEventHandler GetDensityCompleted;
        
        /// <remarks/>
        public event GetDensityGradientCompletedEventHandler GetDensityGradientCompleted;
        
        /// <remarks/>
        public event GetDensityHessianCompletedEventHandler GetDensityHessianCompleted;
        
        /// <remarks/>
        public event GetRawDensityCompletedEventHandler GetRawDensityCompleted;
        
        /// <remarks/>
        public event GetForceCompletedEventHandler GetForceCompleted;
        
        /// <remarks/>
        public event GetVelocityAndPressureCompletedEventHandler GetVelocityAndPressureCompleted;
        
        /// <remarks/>
        public event GetVelocityGradientCompletedEventHandler GetVelocityGradientCompleted;
        
        /// <remarks/>
        public event GetMagneticFieldGradientCompletedEventHandler GetMagneticFieldGradientCompleted;
        
        /// <remarks/>
        public event GetVectorPotentialGradientCompletedEventHandler GetVectorPotentialGradientCompleted;
        
        /// <remarks/>
        public event GetPressureGradientCompletedEventHandler GetPressureGradientCompleted;
        
        /// <remarks/>
        public event GetPressureHessianCompletedEventHandler GetPressureHessianCompleted;
        
        /// <remarks/>
        public event GetVelocityHessianCompletedEventHandler GetVelocityHessianCompleted;
        
        /// <remarks/>
        public event GetMagneticHessianCompletedEventHandler GetMagneticHessianCompleted;
        
        /// <remarks/>
        public event GetVectorPotentialHessianCompletedEventHandler GetVectorPotentialHessianCompleted;
        
        /// <remarks/>
        public event GetVelocityLaplacianCompletedEventHandler GetVelocityLaplacianCompleted;
        
        /// <remarks/>
        public event GetMagneticFieldLaplacianCompletedEventHandler GetMagneticFieldLaplacianCompleted;
        
        /// <remarks/>
        public event GetVectorPotentialLaplacianCompletedEventHandler GetVectorPotentialLaplacianCompleted;
        
        /// <remarks/>
        public event GetPositionCompletedEventHandler GetPositionCompleted;
        
        /// <remarks/>
        public event GetBoxFilterCompletedEventHandler GetBoxFilterCompleted;
        
        /// <remarks/>
        public event GetBoxFilterSGSCompletedEventHandler GetBoxFilterSGSCompleted;
        
        /// <remarks/>
        public event GetBoxFilterSGSsymtensorCompletedEventHandler GetBoxFilterSGSsymtensorCompleted;
        
        /// <remarks/>
        public event GetBoxFilterSGStensorCompletedEventHandler GetBoxFilterSGStensorCompleted;
        
        /// <remarks/>
        public event GetBoxFilterSGSvectorCompletedEventHandler GetBoxFilterSGSvectorCompleted;
        
        /// <remarks/>
        public event GetBoxFilterSGSscalarCompletedEventHandler GetBoxFilterSGSscalarCompleted;
        
        /// <remarks/>
        public event GetBoxFilterGradientCompletedEventHandler GetBoxFilterGradientCompleted;
        
        /// <remarks/>
        public event GetThresholdCompletedEventHandler GetThresholdCompleted;
        
        /// <remarks/>
        public event GetLaplacianOfGradientCompletedEventHandler GetLaplacianOfGradientCompleted;
        
        /// <remarks/>
        public event GetTemperatureCompletedEventHandler GetTemperatureCompleted;
        
        /// <remarks/>
        public event GetTemperatureGradientCompletedEventHandler GetTemperatureGradientCompleted;
        
        /// <remarks/>
        public event GetTemperatureHessianCompletedEventHandler GetTemperatureHessianCompleted;
        
        /// <remarks/>
        public event GetVelocityAndTemperatureCompletedEventHandler GetVelocityAndTemperatureCompleted;
        
        /// <remarks/>
        public event GetInvariantCompletedEventHandler GetInvariantCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/NullOp", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] NullOp(string authToken, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("NullOp", new object[] {
                        authToken,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void NullOpAsync(string authToken, Point3[] points) {
            this.NullOpAsync(authToken, points, null);
        }
        
        /// <remarks/>
        public void NullOpAsync(string authToken, Point3[] points, object userState) {
            if ((this.NullOpOperationCompleted == null)) {
                this.NullOpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullOpOperationCompleted);
            }
            this.InvokeAsync("NullOp", new object[] {
                        authToken,
                        points}, this.NullOpOperationCompleted, userState);
        }
        
        private void OnNullOpOperationCompleted(object arg) {
            if ((this.NullOpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullOpCompleted(this, new NullOpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocity", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetVelocity(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocity", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityOperationCompleted == null)) {
                this.GetVelocityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityOperationCompleted);
            }
            this.InvokeAsync("GetVelocity", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityOperationCompleted, userState);
        }
        
        private void OnGetVelocityOperationCompleted(object arg) {
            if ((this.GetVelocityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityCompleted(this, new GetVelocityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocityBatch", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetVelocityBatch(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocityBatch", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityBatchAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityBatchAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityBatchAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityBatchOperationCompleted == null)) {
                this.GetVelocityBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityBatchOperationCompleted);
            }
            this.InvokeAsync("GetVelocityBatch", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityBatchOperationCompleted, userState);
        }
        
        private void OnGetVelocityBatchOperationCompleted(object arg) {
            if ((this.GetVelocityBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityBatchCompleted(this, new GetVelocityBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetRawVelocity", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRawVelocity(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            object[] results = this.Invoke("GetRawVelocity", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawVelocityAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            this.GetRawVelocityAsync(authToken, dataset, time, X, Y, Z, Xwidth, Ywidth, Zwidth, null);
        }
        
        /// <remarks/>
        public void GetRawVelocityAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth, object userState) {
            if ((this.GetRawVelocityOperationCompleted == null)) {
                this.GetRawVelocityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawVelocityOperationCompleted);
            }
            this.InvokeAsync("GetRawVelocity", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth}, this.GetRawVelocityOperationCompleted, userState);
        }
        
        private void OnGetRawVelocityOperationCompleted(object arg) {
            if ((this.GetRawVelocityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawVelocityCompleted(this, new GetRawVelocityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetPressure", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Pressure[] GetPressure(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetPressure", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Pressure[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetPressureAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetPressureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetPressureOperationCompleted == null)) {
                this.GetPressureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressureOperationCompleted);
            }
            this.InvokeAsync("GetPressure", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetPressureOperationCompleted, userState);
        }
        
        private void OnGetPressureOperationCompleted(object arg) {
            if ((this.GetPressureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressureCompleted(this, new GetPressureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetRawPressure", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRawPressure(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            object[] results = this.Invoke("GetRawPressure", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawPressureAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            this.GetRawPressureAsync(authToken, dataset, time, X, Y, Z, Xwidth, Ywidth, Zwidth, null);
        }
        
        /// <remarks/>
        public void GetRawPressureAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth, object userState) {
            if ((this.GetRawPressureOperationCompleted == null)) {
                this.GetRawPressureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawPressureOperationCompleted);
            }
            this.InvokeAsync("GetRawPressure", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth}, this.GetRawPressureOperationCompleted, userState);
        }
        
        private void OnGetRawPressureOperationCompleted(object arg) {
            if ((this.GetRawPressureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawPressureCompleted(this, new GetRawPressureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetMagneticField", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetMagneticField(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetMagneticField", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMagneticFieldAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetMagneticFieldAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetMagneticFieldAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetMagneticFieldOperationCompleted == null)) {
                this.GetMagneticFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMagneticFieldOperationCompleted);
            }
            this.InvokeAsync("GetMagneticField", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetMagneticFieldOperationCompleted, userState);
        }
        
        private void OnGetMagneticFieldOperationCompleted(object arg) {
            if ((this.GetMagneticFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMagneticFieldCompleted(this, new GetMagneticFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetRawMagneticField", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRawMagneticField(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            object[] results = this.Invoke("GetRawMagneticField", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawMagneticFieldAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            this.GetRawMagneticFieldAsync(authToken, dataset, time, X, Y, Z, Xwidth, Ywidth, Zwidth, null);
        }
        
        /// <remarks/>
        public void GetRawMagneticFieldAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth, object userState) {
            if ((this.GetRawMagneticFieldOperationCompleted == null)) {
                this.GetRawMagneticFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawMagneticFieldOperationCompleted);
            }
            this.InvokeAsync("GetRawMagneticField", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth}, this.GetRawMagneticFieldOperationCompleted, userState);
        }
        
        private void OnGetRawMagneticFieldOperationCompleted(object arg) {
            if ((this.GetRawMagneticFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawMagneticFieldCompleted(this, new GetRawMagneticFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVectorPotential", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetVectorPotential(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVectorPotential", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVectorPotentialAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVectorPotentialAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVectorPotentialAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVectorPotentialOperationCompleted == null)) {
                this.GetVectorPotentialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVectorPotentialOperationCompleted);
            }
            this.InvokeAsync("GetVectorPotential", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVectorPotentialOperationCompleted, userState);
        }
        
        private void OnGetVectorPotentialOperationCompleted(object arg) {
            if ((this.GetVectorPotentialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVectorPotentialCompleted(this, new GetVectorPotentialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetRawVectorPotential", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRawVectorPotential(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            object[] results = this.Invoke("GetRawVectorPotential", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawVectorPotentialAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            this.GetRawVectorPotentialAsync(authToken, dataset, time, X, Y, Z, Xwidth, Ywidth, Zwidth, null);
        }
        
        /// <remarks/>
        public void GetRawVectorPotentialAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth, object userState) {
            if ((this.GetRawVectorPotentialOperationCompleted == null)) {
                this.GetRawVectorPotentialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawVectorPotentialOperationCompleted);
            }
            this.InvokeAsync("GetRawVectorPotential", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth}, this.GetRawVectorPotentialOperationCompleted, userState);
        }
        
        private void OnGetRawVectorPotentialOperationCompleted(object arg) {
            if ((this.GetRawVectorPotentialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawVectorPotentialCompleted(this, new GetRawVectorPotentialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetDensity", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Pressure[] GetDensity(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetDensity", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Pressure[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDensityAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetDensityAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetDensityAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetDensityOperationCompleted == null)) {
                this.GetDensityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDensityOperationCompleted);
            }
            this.InvokeAsync("GetDensity", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetDensityOperationCompleted, userState);
        }
        
        private void OnGetDensityOperationCompleted(object arg) {
            if ((this.GetDensityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDensityCompleted(this, new GetDensityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetDensityGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetDensityGradient(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetDensityGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDensityGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetDensityGradientAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetDensityGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetDensityGradientOperationCompleted == null)) {
                this.GetDensityGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDensityGradientOperationCompleted);
            }
            this.InvokeAsync("GetDensityGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetDensityGradientOperationCompleted, userState);
        }
        
        private void OnGetDensityGradientOperationCompleted(object arg) {
            if ((this.GetDensityGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDensityGradientCompleted(this, new GetDensityGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetDensityHessian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PressureHessian[] GetDensityHessian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetDensityHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((PressureHessian[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDensityHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetDensityHessianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetDensityHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetDensityHessianOperationCompleted == null)) {
                this.GetDensityHessianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDensityHessianOperationCompleted);
            }
            this.InvokeAsync("GetDensityHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetDensityHessianOperationCompleted, userState);
        }
        
        private void OnGetDensityHessianOperationCompleted(object arg) {
            if ((this.GetDensityHessianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDensityHessianCompleted(this, new GetDensityHessianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetRawDensity", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRawDensity(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            object[] results = this.Invoke("GetRawDensity", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawDensityAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            this.GetRawDensityAsync(authToken, dataset, time, X, Y, Z, Xwidth, Ywidth, Zwidth, null);
        }
        
        /// <remarks/>
        public void GetRawDensityAsync(string authToken, string dataset, float time, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth, object userState) {
            if ((this.GetRawDensityOperationCompleted == null)) {
                this.GetRawDensityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawDensityOperationCompleted);
            }
            this.InvokeAsync("GetRawDensity", new object[] {
                        authToken,
                        dataset,
                        time,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth}, this.GetRawDensityOperationCompleted, userState);
        }
        
        private void OnGetRawDensityOperationCompleted(object arg) {
            if ((this.GetRawDensityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawDensityCompleted(this, new GetRawDensityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetForce", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetForce(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetForce", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForceAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetForceAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetForceAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetForceOperationCompleted == null)) {
                this.GetForceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForceOperationCompleted);
            }
            this.InvokeAsync("GetForce", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetForceOperationCompleted, userState);
        }
        
        private void OnGetForceOperationCompleted(object arg) {
            if ((this.GetForceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForceCompleted(this, new GetForceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocityAndPressure", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3P[] GetVelocityAndPressure(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocityAndPressure", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3P[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityAndPressureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityAndPressureAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityAndPressureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityAndPressureOperationCompleted == null)) {
                this.GetVelocityAndPressureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityAndPressureOperationCompleted);
            }
            this.InvokeAsync("GetVelocityAndPressure", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityAndPressureOperationCompleted, userState);
        }
        
        private void OnGetVelocityAndPressureOperationCompleted(object arg) {
            if ((this.GetVelocityAndPressureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityAndPressureCompleted(this, new GetVelocityAndPressureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocityGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityGradient[] GetVelocityGradient(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocityGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityGradient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityGradientAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityGradientOperationCompleted == null)) {
                this.GetVelocityGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityGradientOperationCompleted);
            }
            this.InvokeAsync("GetVelocityGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityGradientOperationCompleted, userState);
        }
        
        private void OnGetVelocityGradientOperationCompleted(object arg) {
            if ((this.GetVelocityGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityGradientCompleted(this, new GetVelocityGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetMagneticFieldGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityGradient[] GetMagneticFieldGradient(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetMagneticFieldGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityGradient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMagneticFieldGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetMagneticFieldGradientAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetMagneticFieldGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetMagneticFieldGradientOperationCompleted == null)) {
                this.GetMagneticFieldGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMagneticFieldGradientOperationCompleted);
            }
            this.InvokeAsync("GetMagneticFieldGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetMagneticFieldGradientOperationCompleted, userState);
        }
        
        private void OnGetMagneticFieldGradientOperationCompleted(object arg) {
            if ((this.GetMagneticFieldGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMagneticFieldGradientCompleted(this, new GetMagneticFieldGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVectorPotentialGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityGradient[] GetVectorPotentialGradient(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVectorPotentialGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityGradient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVectorPotentialGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVectorPotentialGradientAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVectorPotentialGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVectorPotentialGradientOperationCompleted == null)) {
                this.GetVectorPotentialGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVectorPotentialGradientOperationCompleted);
            }
            this.InvokeAsync("GetVectorPotentialGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVectorPotentialGradientOperationCompleted, userState);
        }
        
        private void OnGetVectorPotentialGradientOperationCompleted(object arg) {
            if ((this.GetVectorPotentialGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVectorPotentialGradientCompleted(this, new GetVectorPotentialGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetPressureGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetPressureGradient(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetPressureGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressureGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetPressureGradientAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetPressureGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetPressureGradientOperationCompleted == null)) {
                this.GetPressureGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressureGradientOperationCompleted);
            }
            this.InvokeAsync("GetPressureGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetPressureGradientOperationCompleted, userState);
        }
        
        private void OnGetPressureGradientOperationCompleted(object arg) {
            if ((this.GetPressureGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressureGradientCompleted(this, new GetPressureGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetPressureHessian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PressureHessian[] GetPressureHessian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetPressureHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((PressureHessian[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressureHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetPressureHessianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetPressureHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetPressureHessianOperationCompleted == null)) {
                this.GetPressureHessianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressureHessianOperationCompleted);
            }
            this.InvokeAsync("GetPressureHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetPressureHessianOperationCompleted, userState);
        }
        
        private void OnGetPressureHessianOperationCompleted(object arg) {
            if ((this.GetPressureHessianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressureHessianCompleted(this, new GetPressureHessianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocityHessian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityHessian[] GetVelocityHessian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocityHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityHessian[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityHessianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityHessianOperationCompleted == null)) {
                this.GetVelocityHessianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityHessianOperationCompleted);
            }
            this.InvokeAsync("GetVelocityHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityHessianOperationCompleted, userState);
        }
        
        private void OnGetVelocityHessianOperationCompleted(object arg) {
            if ((this.GetVelocityHessianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityHessianCompleted(this, new GetVelocityHessianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetMagneticHessian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityHessian[] GetMagneticHessian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetMagneticHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityHessian[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMagneticHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetMagneticHessianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetMagneticHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetMagneticHessianOperationCompleted == null)) {
                this.GetMagneticHessianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMagneticHessianOperationCompleted);
            }
            this.InvokeAsync("GetMagneticHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetMagneticHessianOperationCompleted, userState);
        }
        
        private void OnGetMagneticHessianOperationCompleted(object arg) {
            if ((this.GetMagneticHessianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMagneticHessianCompleted(this, new GetMagneticHessianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVectorPotentialHessian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityHessian[] GetVectorPotentialHessian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVectorPotentialHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityHessian[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVectorPotentialHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVectorPotentialHessianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVectorPotentialHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVectorPotentialHessianOperationCompleted == null)) {
                this.GetVectorPotentialHessianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVectorPotentialHessianOperationCompleted);
            }
            this.InvokeAsync("GetVectorPotentialHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVectorPotentialHessianOperationCompleted, userState);
        }
        
        private void OnGetVectorPotentialHessianOperationCompleted(object arg) {
            if ((this.GetVectorPotentialHessianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVectorPotentialHessianCompleted(this, new GetVectorPotentialHessianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocityLaplacian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetVelocityLaplacian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocityLaplacian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityLaplacianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityLaplacianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityLaplacianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityLaplacianOperationCompleted == null)) {
                this.GetVelocityLaplacianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityLaplacianOperationCompleted);
            }
            this.InvokeAsync("GetVelocityLaplacian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityLaplacianOperationCompleted, userState);
        }
        
        private void OnGetVelocityLaplacianOperationCompleted(object arg) {
            if ((this.GetVelocityLaplacianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityLaplacianCompleted(this, new GetVelocityLaplacianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetMagneticFieldLaplacian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetMagneticFieldLaplacian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetMagneticFieldLaplacian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMagneticFieldLaplacianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetMagneticFieldLaplacianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetMagneticFieldLaplacianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetMagneticFieldLaplacianOperationCompleted == null)) {
                this.GetMagneticFieldLaplacianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMagneticFieldLaplacianOperationCompleted);
            }
            this.InvokeAsync("GetMagneticFieldLaplacian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetMagneticFieldLaplacianOperationCompleted, userState);
        }
        
        private void OnGetMagneticFieldLaplacianOperationCompleted(object arg) {
            if ((this.GetMagneticFieldLaplacianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMagneticFieldLaplacianCompleted(this, new GetMagneticFieldLaplacianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVectorPotentialLaplacian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetVectorPotentialLaplacian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVectorPotentialLaplacian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVectorPotentialLaplacianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVectorPotentialLaplacianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVectorPotentialLaplacianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVectorPotentialLaplacianOperationCompleted == null)) {
                this.GetVectorPotentialLaplacianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVectorPotentialLaplacianOperationCompleted);
            }
            this.InvokeAsync("GetVectorPotentialLaplacian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVectorPotentialLaplacianOperationCompleted, userState);
        }
        
        private void OnGetVectorPotentialLaplacianOperationCompleted(object arg) {
            if ((this.GetVectorPotentialLaplacianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVectorPotentialLaplacianCompleted(this, new GetVectorPotentialLaplacianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetPosition", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Point3[] GetPosition(string authToken, string dataset, float StartTime, float EndTime, float dt, SpatialInterpolation spatialInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetPosition", new object[] {
                        authToken,
                        dataset,
                        StartTime,
                        EndTime,
                        dt,
                        spatialInterpolation,
                        points});
            return ((Point3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPositionAsync(string authToken, string dataset, float StartTime, float EndTime, float dt, SpatialInterpolation spatialInterpolation, Point3[] points) {
            this.GetPositionAsync(authToken, dataset, StartTime, EndTime, dt, spatialInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetPositionAsync(string authToken, string dataset, float StartTime, float EndTime, float dt, SpatialInterpolation spatialInterpolation, Point3[] points, object userState) {
            if ((this.GetPositionOperationCompleted == null)) {
                this.GetPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPositionOperationCompleted);
            }
            this.InvokeAsync("GetPosition", new object[] {
                        authToken,
                        dataset,
                        StartTime,
                        EndTime,
                        dt,
                        spatialInterpolation,
                        points}, this.GetPositionOperationCompleted, userState);
        }
        
        private void OnGetPositionOperationCompleted(object arg) {
            if ((this.GetPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPositionCompleted(this, new GetPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilter", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetBoxFilter(string authToken, string dataset, string field, float time, float filterwidth, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilter", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points) {
            this.GetBoxFilterAsync(authToken, dataset, field, time, filterwidth, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points, object userState) {
            if ((this.GetBoxFilterOperationCompleted == null)) {
                this.GetBoxFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilter", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points}, this.GetBoxFilterOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterOperationCompleted(object arg) {
            if ((this.GetBoxFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterCompleted(this, new GetBoxFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilterSGS", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SGSTensor[] GetBoxFilterSGS(string authToken, string dataset, string field, float time, float filterwidth, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilterSGS", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points});
            return ((SGSTensor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points) {
            this.GetBoxFilterSGSAsync(authToken, dataset, field, time, filterwidth, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points, object userState) {
            if ((this.GetBoxFilterSGSOperationCompleted == null)) {
                this.GetBoxFilterSGSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterSGSOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilterSGS", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points}, this.GetBoxFilterSGSOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterSGSOperationCompleted(object arg) {
            if ((this.GetBoxFilterSGSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterSGSCompleted(this, new GetBoxFilterSGSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilterSGSsymtensor", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SGSTensor[] GetBoxFilterSGSsymtensor(string authToken, string dataset, string field, float time, float filterwidth, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilterSGSsymtensor", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points});
            return ((SGSTensor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSsymtensorAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points) {
            this.GetBoxFilterSGSsymtensorAsync(authToken, dataset, field, time, filterwidth, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSsymtensorAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points, object userState) {
            if ((this.GetBoxFilterSGSsymtensorOperationCompleted == null)) {
                this.GetBoxFilterSGSsymtensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterSGSsymtensorOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilterSGSsymtensor", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points}, this.GetBoxFilterSGSsymtensorOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterSGSsymtensorOperationCompleted(object arg) {
            if ((this.GetBoxFilterSGSsymtensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterSGSsymtensorCompleted(this, new GetBoxFilterSGSsymtensorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilterSGStensor", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityGradient[] GetBoxFilterSGStensor(string authToken, string dataset, string field, float time, float filterwidth, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilterSGStensor", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points});
            return ((VelocityGradient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterSGStensorAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points) {
            this.GetBoxFilterSGStensorAsync(authToken, dataset, field, time, filterwidth, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterSGStensorAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points, object userState) {
            if ((this.GetBoxFilterSGStensorOperationCompleted == null)) {
                this.GetBoxFilterSGStensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterSGStensorOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilterSGStensor", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points}, this.GetBoxFilterSGStensorOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterSGStensorOperationCompleted(object arg) {
            if ((this.GetBoxFilterSGStensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterSGStensorCompleted(this, new GetBoxFilterSGStensorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilterSGSvector", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetBoxFilterSGSvector(string authToken, string dataset, string field, float time, float filterwidth, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilterSGSvector", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSvectorAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points) {
            this.GetBoxFilterSGSvectorAsync(authToken, dataset, field, time, filterwidth, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSvectorAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points, object userState) {
            if ((this.GetBoxFilterSGSvectorOperationCompleted == null)) {
                this.GetBoxFilterSGSvectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterSGSvectorOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilterSGSvector", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points}, this.GetBoxFilterSGSvectorOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterSGSvectorOperationCompleted(object arg) {
            if ((this.GetBoxFilterSGSvectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterSGSvectorCompleted(this, new GetBoxFilterSGSvectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilterSGSscalar", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float[] GetBoxFilterSGSscalar(string authToken, string dataset, string field, float time, float filterwidth, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilterSGSscalar", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points});
            return ((float[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSscalarAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points) {
            this.GetBoxFilterSGSscalarAsync(authToken, dataset, field, time, filterwidth, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterSGSscalarAsync(string authToken, string dataset, string field, float time, float filterwidth, Point3[] points, object userState) {
            if ((this.GetBoxFilterSGSscalarOperationCompleted == null)) {
                this.GetBoxFilterSGSscalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterSGSscalarOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilterSGSscalar", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        points}, this.GetBoxFilterSGSscalarOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterSGSscalarOperationCompleted(object arg) {
            if ((this.GetBoxFilterSGSscalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterSGSscalarCompleted(this, new GetBoxFilterSGSscalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetBoxFilterGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityGradient[] GetBoxFilterGradient(string authToken, string dataset, string field, float time, float filterwidth, float spacing, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetBoxFilterGradient", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        spacing,
                        points});
            return ((VelocityGradient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxFilterGradientAsync(string authToken, string dataset, string field, float time, float filterwidth, float spacing, Point3[] points) {
            this.GetBoxFilterGradientAsync(authToken, dataset, field, time, filterwidth, spacing, points, null);
        }
        
        /// <remarks/>
        public void GetBoxFilterGradientAsync(string authToken, string dataset, string field, float time, float filterwidth, float spacing, Point3[] points, object userState) {
            if ((this.GetBoxFilterGradientOperationCompleted == null)) {
                this.GetBoxFilterGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxFilterGradientOperationCompleted);
            }
            this.InvokeAsync("GetBoxFilterGradient", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        filterwidth,
                        spacing,
                        points}, this.GetBoxFilterGradientOperationCompleted, userState);
        }
        
        private void OnGetBoxFilterGradientOperationCompleted(object arg) {
            if ((this.GetBoxFilterGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxFilterGradientCompleted(this, new GetBoxFilterGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetThreshold", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ThresholdInfo[] GetThreshold(string authToken, string dataset, string field, float time, float threshold, SpatialInterpolation spatialInterpolation, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            object[] results = this.Invoke("GetThreshold", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        threshold,
                        spatialInterpolation,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth});
            return ((ThresholdInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetThresholdAsync(string authToken, string dataset, string field, float time, float threshold, SpatialInterpolation spatialInterpolation, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth) {
            this.GetThresholdAsync(authToken, dataset, field, time, threshold, spatialInterpolation, X, Y, Z, Xwidth, Ywidth, Zwidth, null);
        }
        
        /// <remarks/>
        public void GetThresholdAsync(string authToken, string dataset, string field, float time, float threshold, SpatialInterpolation spatialInterpolation, int X, int Y, int Z, int Xwidth, int Ywidth, int Zwidth, object userState) {
            if ((this.GetThresholdOperationCompleted == null)) {
                this.GetThresholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThresholdOperationCompleted);
            }
            this.InvokeAsync("GetThreshold", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        threshold,
                        spatialInterpolation,
                        X,
                        Y,
                        Z,
                        Xwidth,
                        Ywidth,
                        Zwidth}, this.GetThresholdOperationCompleted, userState);
        }
        
        private void OnGetThresholdOperationCompleted(object arg) {
            if ((this.GetThresholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThresholdCompleted(this, new GetThresholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetLaplacianOfGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VelocityGradient[] GetLaplacianOfGradient(string authToken, string dataset, string field, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetLaplacianOfGradient", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((VelocityGradient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLaplacianOfGradientAsync(string authToken, string dataset, string field, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetLaplacianOfGradientAsync(authToken, dataset, field, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetLaplacianOfGradientAsync(string authToken, string dataset, string field, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetLaplacianOfGradientOperationCompleted == null)) {
                this.GetLaplacianOfGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLaplacianOfGradientOperationCompleted);
            }
            this.InvokeAsync("GetLaplacianOfGradient", new object[] {
                        authToken,
                        dataset,
                        field,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetLaplacianOfGradientOperationCompleted, userState);
        }
        
        private void OnGetLaplacianOfGradientOperationCompleted(object arg) {
            if ((this.GetLaplacianOfGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLaplacianOfGradientCompleted(this, new GetLaplacianOfGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetTemperature", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Pressure[] GetTemperature(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetTemperature", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Pressure[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemperatureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetTemperatureAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetTemperatureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetTemperatureOperationCompleted == null)) {
                this.GetTemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemperatureOperationCompleted);
            }
            this.InvokeAsync("GetTemperature", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetTemperatureOperationCompleted, userState);
        }
        
        private void OnGetTemperatureOperationCompleted(object arg) {
            if ((this.GetTemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemperatureCompleted(this, new GetTemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetTemperatureGradient", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetTemperatureGradient(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetTemperatureGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemperatureGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetTemperatureGradientAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetTemperatureGradientAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetTemperatureGradientOperationCompleted == null)) {
                this.GetTemperatureGradientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemperatureGradientOperationCompleted);
            }
            this.InvokeAsync("GetTemperatureGradient", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetTemperatureGradientOperationCompleted, userState);
        }
        
        private void OnGetTemperatureGradientOperationCompleted(object arg) {
            if ((this.GetTemperatureGradientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemperatureGradientCompleted(this, new GetTemperatureGradientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetTemperatureHessian", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PressureHessian[] GetTemperatureHessian(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetTemperatureHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((PressureHessian[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemperatureHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetTemperatureHessianAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetTemperatureHessianAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetTemperatureHessianOperationCompleted == null)) {
                this.GetTemperatureHessianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemperatureHessianOperationCompleted);
            }
            this.InvokeAsync("GetTemperatureHessian", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetTemperatureHessianOperationCompleted, userState);
        }
        
        private void OnGetTemperatureHessianOperationCompleted(object arg) {
            if ((this.GetTemperatureHessianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemperatureHessianCompleted(this, new GetTemperatureHessianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetVelocityAndTemperature", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3P[] GetVelocityAndTemperature(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetVelocityAndTemperature", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3P[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVelocityAndTemperatureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetVelocityAndTemperatureAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetVelocityAndTemperatureAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetVelocityAndTemperatureOperationCompleted == null)) {
                this.GetVelocityAndTemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVelocityAndTemperatureOperationCompleted);
            }
            this.InvokeAsync("GetVelocityAndTemperature", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetVelocityAndTemperatureOperationCompleted, userState);
        }
        
        private void OnGetVelocityAndTemperatureOperationCompleted(object arg) {
            if ((this.GetVelocityAndTemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVelocityAndTemperatureCompleted(this, new GetVelocityAndTemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://turbulence.pha.jhu.edu/GetInvariant", RequestNamespace="http://turbulence.pha.jhu.edu/", ResponseNamespace="http://turbulence.pha.jhu.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Vector3[] GetInvariant(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] Point3[] points) {
            object[] results = this.Invoke("GetInvariant", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points});
            return ((Vector3[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInvariantAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points) {
            this.GetInvariantAsync(authToken, dataset, time, spatialInterpolation, temporalInterpolation, points, null);
        }
        
        /// <remarks/>
        public void GetInvariantAsync(string authToken, string dataset, float time, SpatialInterpolation spatialInterpolation, TemporalInterpolation temporalInterpolation, Point3[] points, object userState) {
            if ((this.GetInvariantOperationCompleted == null)) {
                this.GetInvariantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvariantOperationCompleted);
            }
            this.InvokeAsync("GetInvariant", new object[] {
                        authToken,
                        dataset,
                        time,
                        spatialInterpolation,
                        temporalInterpolation,
                        points}, this.GetInvariantOperationCompleted, userState);
        }
        
        private void OnGetInvariantOperationCompleted(object arg) {
            if ((this.GetInvariantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvariantCompleted(this, new GetInvariantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class Point3 {
        
        private float xField;
        
        private float yField;
        
        private float zField;
        
        /// <remarks/>
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public float y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public float z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class ThresholdInfo {
        
        private int xField;
        
        private int yField;
        
        private int zField;
        
        private float valueField;
        
        /// <remarks/>
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public int z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class SGSTensor {
        
        private float xxField;
        
        private float yyField;
        
        private float zzField;
        
        private float xyField;
        
        private float xzField;
        
        private float yzField;
        
        /// <remarks/>
        public float xx {
            get {
                return this.xxField;
            }
            set {
                this.xxField = value;
            }
        }
        
        /// <remarks/>
        public float yy {
            get {
                return this.yyField;
            }
            set {
                this.yyField = value;
            }
        }
        
        /// <remarks/>
        public float zz {
            get {
                return this.zzField;
            }
            set {
                this.zzField = value;
            }
        }
        
        /// <remarks/>
        public float xy {
            get {
                return this.xyField;
            }
            set {
                this.xyField = value;
            }
        }
        
        /// <remarks/>
        public float xz {
            get {
                return this.xzField;
            }
            set {
                this.xzField = value;
            }
        }
        
        /// <remarks/>
        public float yz {
            get {
                return this.yzField;
            }
            set {
                this.yzField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class VelocityHessian {
        
        private float d2uxdxdxField;
        
        private float d2uxdxdyField;
        
        private float d2uxdxdzField;
        
        private float d2uxdydyField;
        
        private float d2uxdydzField;
        
        private float d2uxdzdzField;
        
        private float d2uydxdxField;
        
        private float d2uydxdyField;
        
        private float d2uydxdzField;
        
        private float d2uydydyField;
        
        private float d2uydydzField;
        
        private float d2uydzdzField;
        
        private float d2uzdxdxField;
        
        private float d2uzdxdyField;
        
        private float d2uzdxdzField;
        
        private float d2uzdydyField;
        
        private float d2uzdydzField;
        
        private float d2uzdzdzField;
        
        /// <remarks/>
        public float d2uxdxdx {
            get {
                return this.d2uxdxdxField;
            }
            set {
                this.d2uxdxdxField = value;
            }
        }
        
        /// <remarks/>
        public float d2uxdxdy {
            get {
                return this.d2uxdxdyField;
            }
            set {
                this.d2uxdxdyField = value;
            }
        }
        
        /// <remarks/>
        public float d2uxdxdz {
            get {
                return this.d2uxdxdzField;
            }
            set {
                this.d2uxdxdzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uxdydy {
            get {
                return this.d2uxdydyField;
            }
            set {
                this.d2uxdydyField = value;
            }
        }
        
        /// <remarks/>
        public float d2uxdydz {
            get {
                return this.d2uxdydzField;
            }
            set {
                this.d2uxdydzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uxdzdz {
            get {
                return this.d2uxdzdzField;
            }
            set {
                this.d2uxdzdzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uydxdx {
            get {
                return this.d2uydxdxField;
            }
            set {
                this.d2uydxdxField = value;
            }
        }
        
        /// <remarks/>
        public float d2uydxdy {
            get {
                return this.d2uydxdyField;
            }
            set {
                this.d2uydxdyField = value;
            }
        }
        
        /// <remarks/>
        public float d2uydxdz {
            get {
                return this.d2uydxdzField;
            }
            set {
                this.d2uydxdzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uydydy {
            get {
                return this.d2uydydyField;
            }
            set {
                this.d2uydydyField = value;
            }
        }
        
        /// <remarks/>
        public float d2uydydz {
            get {
                return this.d2uydydzField;
            }
            set {
                this.d2uydydzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uydzdz {
            get {
                return this.d2uydzdzField;
            }
            set {
                this.d2uydzdzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uzdxdx {
            get {
                return this.d2uzdxdxField;
            }
            set {
                this.d2uzdxdxField = value;
            }
        }
        
        /// <remarks/>
        public float d2uzdxdy {
            get {
                return this.d2uzdxdyField;
            }
            set {
                this.d2uzdxdyField = value;
            }
        }
        
        /// <remarks/>
        public float d2uzdxdz {
            get {
                return this.d2uzdxdzField;
            }
            set {
                this.d2uzdxdzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uzdydy {
            get {
                return this.d2uzdydyField;
            }
            set {
                this.d2uzdydyField = value;
            }
        }
        
        /// <remarks/>
        public float d2uzdydz {
            get {
                return this.d2uzdydzField;
            }
            set {
                this.d2uzdydzField = value;
            }
        }
        
        /// <remarks/>
        public float d2uzdzdz {
            get {
                return this.d2uzdzdzField;
            }
            set {
                this.d2uzdzdzField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class VelocityGradient {
        
        private float duxdxField;
        
        private float duxdyField;
        
        private float duxdzField;
        
        private float duydxField;
        
        private float duydyField;
        
        private float duydzField;
        
        private float duzdxField;
        
        private float duzdyField;
        
        private float duzdzField;
        
        /// <remarks/>
        public float duxdx {
            get {
                return this.duxdxField;
            }
            set {
                this.duxdxField = value;
            }
        }
        
        /// <remarks/>
        public float duxdy {
            get {
                return this.duxdyField;
            }
            set {
                this.duxdyField = value;
            }
        }
        
        /// <remarks/>
        public float duxdz {
            get {
                return this.duxdzField;
            }
            set {
                this.duxdzField = value;
            }
        }
        
        /// <remarks/>
        public float duydx {
            get {
                return this.duydxField;
            }
            set {
                this.duydxField = value;
            }
        }
        
        /// <remarks/>
        public float duydy {
            get {
                return this.duydyField;
            }
            set {
                this.duydyField = value;
            }
        }
        
        /// <remarks/>
        public float duydz {
            get {
                return this.duydzField;
            }
            set {
                this.duydzField = value;
            }
        }
        
        /// <remarks/>
        public float duzdx {
            get {
                return this.duzdxField;
            }
            set {
                this.duzdxField = value;
            }
        }
        
        /// <remarks/>
        public float duzdy {
            get {
                return this.duzdyField;
            }
            set {
                this.duzdyField = value;
            }
        }
        
        /// <remarks/>
        public float duzdz {
            get {
                return this.duzdzField;
            }
            set {
                this.duzdzField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class Vector3P {
        
        private float xField;
        
        private float yField;
        
        private float zField;
        
        private float pField;
        
        /// <remarks/>
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public float y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public float z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
        
        /// <remarks/>
        public float p {
            get {
                return this.pField;
            }
            set {
                this.pField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class PressureHessian {
        
        private float d2pdxdxField;
        
        private float d2pdxdyField;
        
        private float d2pdxdzField;
        
        private float d2pdydyField;
        
        private float d2pdydzField;
        
        private float d2pdzdzField;
        
        /// <remarks/>
        public float d2pdxdx {
            get {
                return this.d2pdxdxField;
            }
            set {
                this.d2pdxdxField = value;
            }
        }
        
        /// <remarks/>
        public float d2pdxdy {
            get {
                return this.d2pdxdyField;
            }
            set {
                this.d2pdxdyField = value;
            }
        }
        
        /// <remarks/>
        public float d2pdxdz {
            get {
                return this.d2pdxdzField;
            }
            set {
                this.d2pdxdzField = value;
            }
        }
        
        /// <remarks/>
        public float d2pdydy {
            get {
                return this.d2pdydyField;
            }
            set {
                this.d2pdydyField = value;
            }
        }
        
        /// <remarks/>
        public float d2pdydz {
            get {
                return this.d2pdydzField;
            }
            set {
                this.d2pdydzField = value;
            }
        }
        
        /// <remarks/>
        public float d2pdzdz {
            get {
                return this.d2pdzdzField;
            }
            set {
                this.d2pdzdzField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class Pressure {
        
        private float pField;
        
        /// <remarks/>
        public float p {
            get {
                return this.pField;
            }
            set {
                this.pField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public partial class Vector3 {
        
        private float xField;
        
        private float yField;
        
        private float zField;
        
        /// <remarks/>
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public float y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public float z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public enum SpatialInterpolation {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        None_Fd4,
        
        /// <remarks/>
        None_Fd6,
        
        /// <remarks/>
        None_Fd8,
        
        /// <remarks/>
        Fd4Lag4,
        
        /// <remarks/>
        Lag4,
        
        /// <remarks/>
        Lag6,
        
        /// <remarks/>
        Lag8,
        
        /// <remarks/>
        M1Q4,
        
        /// <remarks/>
        M2Q4,
        
        /// <remarks/>
        M3Q4,
        
        /// <remarks/>
        M4Q4,
        
        /// <remarks/>
        M1Q6,
        
        /// <remarks/>
        M2Q6,
        
        /// <remarks/>
        M3Q6,
        
        /// <remarks/>
        M4Q6,
        
        /// <remarks/>
        M1Q8,
        
        /// <remarks/>
        M2Q8,
        
        /// <remarks/>
        M3Q8,
        
        /// <remarks/>
        M4Q8,
        
        /// <remarks/>
        M1Q10,
        
        /// <remarks/>
        M2Q10,
        
        /// <remarks/>
        M3Q10,
        
        /// <remarks/>
        M4Q10,
        
        /// <remarks/>
        M1Q12,
        
        /// <remarks/>
        M2Q12,
        
        /// <remarks/>
        M3Q12,
        
        /// <remarks/>
        M4Q12,
        
        /// <remarks/>
        M1Q14,
        
        /// <remarks/>
        M2Q14,
        
        /// <remarks/>
        M3Q14,
        
        /// <remarks/>
        M4Q14,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://turbulence.pha.jhu.edu/")]
    public enum TemporalInterpolation {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        PCHIP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void NullOpCompletedEventHandler(object sender, NullOpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullOpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullOpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityCompletedEventHandler(object sender, GetVelocityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityBatchCompletedEventHandler(object sender, GetVelocityBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetRawVelocityCompletedEventHandler(object sender, GetRawVelocityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawVelocityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawVelocityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetPressureCompletedEventHandler(object sender, GetPressureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Pressure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Pressure[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetRawPressureCompletedEventHandler(object sender, GetRawPressureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawPressureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawPressureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetMagneticFieldCompletedEventHandler(object sender, GetMagneticFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMagneticFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMagneticFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetRawMagneticFieldCompletedEventHandler(object sender, GetRawMagneticFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawMagneticFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawMagneticFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVectorPotentialCompletedEventHandler(object sender, GetVectorPotentialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVectorPotentialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVectorPotentialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetRawVectorPotentialCompletedEventHandler(object sender, GetRawVectorPotentialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawVectorPotentialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawVectorPotentialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetDensityCompletedEventHandler(object sender, GetDensityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDensityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDensityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Pressure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Pressure[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetDensityGradientCompletedEventHandler(object sender, GetDensityGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDensityGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDensityGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetDensityHessianCompletedEventHandler(object sender, GetDensityHessianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDensityHessianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDensityHessianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressureHessian[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressureHessian[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetRawDensityCompletedEventHandler(object sender, GetRawDensityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawDensityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawDensityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetForceCompletedEventHandler(object sender, GetForceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityAndPressureCompletedEventHandler(object sender, GetVelocityAndPressureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityAndPressureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityAndPressureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3P[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3P[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityGradientCompletedEventHandler(object sender, GetVelocityGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityGradient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityGradient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetMagneticFieldGradientCompletedEventHandler(object sender, GetMagneticFieldGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMagneticFieldGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMagneticFieldGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityGradient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityGradient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVectorPotentialGradientCompletedEventHandler(object sender, GetVectorPotentialGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVectorPotentialGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVectorPotentialGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityGradient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityGradient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetPressureGradientCompletedEventHandler(object sender, GetPressureGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressureGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressureGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetPressureHessianCompletedEventHandler(object sender, GetPressureHessianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressureHessianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressureHessianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressureHessian[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressureHessian[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityHessianCompletedEventHandler(object sender, GetVelocityHessianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityHessianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityHessianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityHessian[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityHessian[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetMagneticHessianCompletedEventHandler(object sender, GetMagneticHessianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMagneticHessianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMagneticHessianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityHessian[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityHessian[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVectorPotentialHessianCompletedEventHandler(object sender, GetVectorPotentialHessianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVectorPotentialHessianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVectorPotentialHessianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityHessian[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityHessian[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityLaplacianCompletedEventHandler(object sender, GetVelocityLaplacianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityLaplacianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityLaplacianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetMagneticFieldLaplacianCompletedEventHandler(object sender, GetMagneticFieldLaplacianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMagneticFieldLaplacianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMagneticFieldLaplacianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVectorPotentialLaplacianCompletedEventHandler(object sender, GetVectorPotentialLaplacianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVectorPotentialLaplacianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVectorPotentialLaplacianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetPositionCompletedEventHandler(object sender, GetPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Point3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Point3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterCompletedEventHandler(object sender, GetBoxFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterSGSCompletedEventHandler(object sender, GetBoxFilterSGSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterSGSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterSGSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SGSTensor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SGSTensor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterSGSsymtensorCompletedEventHandler(object sender, GetBoxFilterSGSsymtensorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterSGSsymtensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterSGSsymtensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SGSTensor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SGSTensor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterSGStensorCompletedEventHandler(object sender, GetBoxFilterSGStensorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterSGStensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterSGStensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityGradient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityGradient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterSGSvectorCompletedEventHandler(object sender, GetBoxFilterSGSvectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterSGSvectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterSGSvectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterSGSscalarCompletedEventHandler(object sender, GetBoxFilterSGSscalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterSGSscalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterSGSscalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetBoxFilterGradientCompletedEventHandler(object sender, GetBoxFilterGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxFilterGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxFilterGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityGradient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityGradient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetThresholdCompletedEventHandler(object sender, GetThresholdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThresholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThresholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ThresholdInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ThresholdInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetLaplacianOfGradientCompletedEventHandler(object sender, GetLaplacianOfGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLaplacianOfGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLaplacianOfGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VelocityGradient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VelocityGradient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetTemperatureCompletedEventHandler(object sender, GetTemperatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Pressure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Pressure[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetTemperatureGradientCompletedEventHandler(object sender, GetTemperatureGradientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemperatureGradientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemperatureGradientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetTemperatureHessianCompletedEventHandler(object sender, GetTemperatureHessianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemperatureHessianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemperatureHessianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressureHessian[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressureHessian[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVelocityAndTemperatureCompletedEventHandler(object sender, GetVelocityAndTemperatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVelocityAndTemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVelocityAndTemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3P[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3P[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetInvariantCompletedEventHandler(object sender, GetInvariantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvariantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvariantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vector3[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vector3[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591